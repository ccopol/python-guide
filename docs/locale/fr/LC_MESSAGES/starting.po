# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016. A <a
# href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a>
# Project. <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">CC
# BY-NC-SA 3.0</a>
# This file is distributed under the same license as the pythonguide
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: pythonguide 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-22 01:59+0200\n"
"PO-Revision-Date: 2016-07-03 00:43+0100\n"
"Last-Translator: Thomas Gratier <thomas.gratier@webgeodatavore.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 1.3\n"
"X-Generator: Poedit 1.5.4\n"
"Language: fr\n"

#: ../../starting/install/linux.rst:4
msgid "Installing Python on Linux"
msgstr "Installation de Python sous Linux"

#: ../../starting/install/linux.rst:6
msgid ""
"The latest versions of CentOS, Fedora, Redhat Enterprise (RHEL) and Ubuntu "
"**come with Python 2.7 out of the box**."
msgstr ""
"Les dernières versions de CentOS, Fedora, Redhat Enterprise (RHEL) et Ubuntu "
"**sous fournies avec Python 2.7 par défaut**."

#: ../../starting/install/linux.rst:9
msgid ""
"To see which version of Python you have installed, open a command prompt and "
"run"
msgstr ""
"Pour savoir quelle version de Python vous avez installé, ouvrez une ligne de "
"commande et lancez"

#: ../../starting/install/linux.rst:15
msgid ""
"Some older versions of RHEL and CentOS come with Python 2.4 which is "
"unacceptable for modern Python development. Fortunately, there are `Extra "
"Packages for Enterprise Linux`_ which include high quality additional "
"packages based on their Fedora counterparts. This repository contains a "
"Python 2.6 package specifically designed to install side-by-side with the "
"system's Python 2.4 installation."
msgstr ""
"Quelques vieilles  versions de RHEL et CentOS sont fournies avec Python 2.4 "
"qui est inacceptable pour le développement Python moderne. Heureusement, il "
"y a des `paquets supplémentaires pour Enterprise Linux <http://fedoraproject."
"org/wiki/EPEL>`_ qui incluent des paquets additionnels de haute qualité "
"basés sur leurs versions équivalentes Fedora. Ce dépôt contient un paquet "
"Python 2.6 conçu spécifiquement pour être installé côte à côte avec "
"l'installation système Python 2.4."

#: ../../starting/install/linux.rst:24
msgid ""
"You do not need to install or configure anything else to use Python. Having "
"said that, I would strongly recommend that you install the tools and "
"libraries described in the next section before you start building Python "
"applications for real-world use. In particular, you should always install "
"Setuptools and pip, as it makes it much easier for you to use other third-"
"party Python libraries."
msgstr ""

#: ../../starting/install/linux.rst:31 ../../starting/install/osx.rst:70
msgid "Setuptools & Pip"
msgstr "Setuptools & Pip"

#: ../../starting/install/linux.rst:33
msgid ""
"The two most crucial third-party Python packages are `setuptools <https://"
"pypi.python.org/pypi/setuptools>`_ and `pip <https://pip.pypa.io/en/stable/"
">`_."
msgstr ""

#: ../../starting/install/linux.rst:35
msgid ""
"Once installed, you can download, install and uninstall any compliant Python "
"software product with a single command. It also enables you to add this "
"network installation capability to your own Python software with very little "
"work."
msgstr ""

#: ../../starting/install/linux.rst:39
msgid ""
"Python 2.7.9 and later (on the python2 series), and Python 3.4 and later "
"include pip by default."
msgstr ""
"Python 2.7.9 et supérieur (sur la série python2), et Python 3.4 et supérieur "
"incluent pip par défaut."

#: ../../starting/install/linux.rst:42
msgid "To see if pip is installed, open a command prompt and run"
msgstr ""

#: ../../starting/install/linux.rst:48
msgid ""
"To install pip, `follow the official pip installation guide <https://pip."
"pypa.io/en/latest/installing/>`_ - this will automatically install the "
"latest version of setuptools."
msgstr ""

#: ../../starting/install/linux.rst:51 ../../starting/install/osx.rst:85
#: ../../starting/install/win.rst:70
msgid "Virtual Environments"
msgstr "Environnements virtuels"

#: ../../starting/install/linux.rst:53 ../../starting/install/osx.rst:87
#: ../../starting/install/win.rst:72
msgid ""
"A Virtual Environment is a tool to keep the dependencies required by "
"different projects in separate places, by creating virtual Python "
"environments for them. It solves the \"Project X depends on version 1.x but, "
"Project Y needs 4.x\" dilemma, and keeps your global site-packages directory "
"clean and manageable."
msgstr ""

#: ../../starting/install/linux.rst:58 ../../starting/install/osx.rst:92
#: ../../starting/install/win.rst:77
msgid ""
"For example, you can work on a project which requires Django 1.3 while also "
"maintaining a project which requires Django 1.0."
msgstr ""

#: ../../starting/install/linux.rst:61 ../../starting/install/osx.rst:95
#: ../../starting/install/win.rst:80
msgid ""
"To start using this and see more information: :ref:`Virtual Environments "
"<virtualenvironments-ref>` docs."
msgstr ""

#: ../../starting/install/linux.rst:63
msgid ""
"You can also use :ref:`virtualenvwrapper <virtualenvwrapper-ref>` to make it "
"easier to manage your virtual environments."
msgstr ""

#: ../../starting/install/linux.rst:68 ../../starting/install/osx.rst:100
#: ../../starting/install/win.rst:85
msgid ""
"This page is a remixed version of `another guide <http://www.stuartellis.eu/"
"articles/python-development-windows/>`_, which is available under the same "
"license."
msgstr ""

#: ../../starting/install/osx.rst:4
msgid "Installing Python on Mac OS X"
msgstr "Installation de Python sous Mac OS X"

#: ../../starting/install/osx.rst:6
msgid ""
"The latest version of Mac OS X, El Capitan, **comes with Python 2.7 out of "
"the box**."
msgstr ""

#: ../../starting/install/osx.rst:8
msgid ""
"You do not need to install or configure anything else to use Python. Having "
"said that, I would strongly recommend that you install the tools and "
"libraries described in the next section before you start building Python "
"applications for real-world use. In particular, you should always install "
"Setuptools, as it makes it much easier for you to use other third-party "
"Python libraries."
msgstr ""

#: ../../starting/install/osx.rst:14
msgid ""
"The version of Python that ships with OS X is great for learning but it's "
"not good for development. The version shipped with OS X may be out of date "
"from the `official current Python release <https://www.python.org/downloads/"
"mac-osx/>`_, which is considered the stable production version."
msgstr ""

#: ../../starting/install/osx.rst:20
msgid "Doing it Right"
msgstr ""

#: ../../starting/install/osx.rst:22
msgid "Let's install a real version of Python."
msgstr "Installons une vraie version de Python."

#: ../../starting/install/osx.rst:24
msgid ""
"Before installing Python, you'll need to install GCC. GCC can be obtained by "
"downloading `Xcode <http://developer.apple.com/xcode/>`_, the smaller "
"`Command Line Tools <https://developer.apple.com/downloads/>`_ (must have an "
"Apple account) or the even smaller `OSX-GCC-Installer <https://github.com/"
"kennethreitz/osx-gcc-installer#readme>`_ package."
msgstr ""

#: ../../starting/install/osx.rst:31
msgid ""
"If you already have Xcode installed, do not install OSX-GCC-Installer. In "
"combination, the software can cause issues that are difficult to diagnose."
msgstr ""

#: ../../starting/install/osx.rst:36
msgid ""
"If you perform a fresh install of Xcode, you will also need to add the "
"commandline tools by running ``xcode-select --install`` on the terminal."
msgstr ""

#: ../../starting/install/osx.rst:39
msgid ""
"While OS X comes with a large number of UNIX utilities, those familiar with "
"Linux systems will notice one key component missing: a decent package "
"manager. `Homebrew <http://brew.sh>`_ fills this void."
msgstr ""

#: ../../starting/install/osx.rst:43
msgid ""
"To `install Homebrew <http://brew.sh/#install>`_, open :file:`Terminal` or "
"your favorite OSX terminal emulator and run"
msgstr ""

#: ../../starting/install/osx.rst:50
msgid ""
"The script will explain what changes it will make and prompt you before the "
"installation begins. Once you've installed Homebrew, insert the Homebrew "
"directory at the top of your :envvar:`PATH` environment variable. You can do "
"this by adding the following line at the bottom of your :file:`~/.profile` "
"file"
msgstr ""

#: ../../starting/install/osx.rst:60
msgid "Now, we can install Python 2.7:"
msgstr ""

#: ../../starting/install/osx.rst:66
msgid "This will take a minute or two."
msgstr ""

#: ../../starting/install/osx.rst:72
msgid "Homebrew installs Setuptools and ``pip`` for you."
msgstr ""

#: ../../starting/install/osx.rst:74
msgid ""
"Setuptools enables you to download and install any compliant Python software "
"over a network (usually the Internet) with a single command "
"(``easy_install``). It also enables you to add this network installation "
"capability to your own Python software with very little work."
msgstr ""

#: ../../starting/install/osx.rst:79
msgid ""
"``pip`` is a tool for easily installing and managing Python packages, that "
"is recommended over ``easy_install``. It is superior to ``easy_install`` in "
"`several ways <https://python-packaging-user-guide.readthedocs.org/en/latest/"
"pip_easy_install/#pip-vs-easy-install>`_, and is actively maintained."
msgstr ""

#: ../../starting/install/win.rst:4
msgid "Installing Python on Windows"
msgstr "Installation de Python sous Windows"

#: ../../starting/install/win.rst:6
msgid ""
"First, download the `latest version <https://www.python.org/ftp/"
"python/2.7.10/python-2.7.10.msi>`_ of Python 2.7 from the official Website. "
"If you want to be sure you are installing a fully up-to-date version, click "
"the Downloads > Windows link from the home page of the `Python.org web site "
"<http://python.org>`_ ."
msgstr ""

#: ../../starting/install/win.rst:11
msgid ""
"The Windows version is provided as an MSI package. To install it manually, "
"just double-click the file. The MSI package format allows Windows "
"administrators to automate installation with their standard tools."
msgstr ""

#: ../../starting/install/win.rst:15
msgid ""
"By design, Python installs to a directory with the version number embedded, "
"e.g. Python version 2.7 will install at :file:`C:\\\\Python27\\\\`, so that "
"you can have multiple versions of Python on the same system without "
"conflicts. Of course, only one interpreter can be the default application "
"for Python file types. It also does not automatically modify the :envvar:"
"`PATH` environment variable, so that you always have control over which copy "
"of Python is run."
msgstr ""

#: ../../starting/install/win.rst:23
msgid ""
"Typing the full path name for a Python interpreter each time quickly gets "
"tedious, so add the directories for your default Python version to the :"
"envvar:`PATH`. Assuming that your Python installation is in :file:`C:\\"
"\\Python27\\\\`, add this to your :envvar:`PATH`:"
msgstr ""

#: ../../starting/install/win.rst:32
msgid "You can do this easily by running the following in ``powershell``:"
msgstr ""

#: ../../starting/install/win.rst:38
msgid ""
"The second (:file:`Scripts`) directory receives command files when certain "
"packages are installed, so it is a very useful addition. You do not need to "
"install or configure anything else to use Python. Having said that, I would "
"strongly recommend that you install the tools and libraries described in the "
"next section before you start building Python applications for real-world "
"use. In particular, you should always install Setuptools, as it makes it "
"much easier for you to use other third-party Python libraries."
msgstr ""

#: ../../starting/install/win.rst:47
msgid "Setuptools + Pip"
msgstr "Setuptools + Pip"

#: ../../starting/install/win.rst:49
msgid ""
"The most crucial third-party Python software of all is Setuptools, which "
"extends the packaging and installation facilities provided by the distutils "
"in the standard library. Once you add Setuptools to your Python system you "
"can download and install any compliant Python software product with a single "
"command. It also enables you to add this network installation capability to "
"your own Python software with very little work."
msgstr ""

#: ../../starting/install/win.rst:56
msgid ""
"To obtain the latest version of Setuptools for Windows, run the Python "
"script available here: `ez_setup.py <https://bitbucket.org/pypa/setuptools/"
"raw/bootstrap/ez_setup.py>`_"
msgstr ""

#: ../../starting/install/win.rst:60
msgid ""
"You'll now have a new command available to you: **easy_install**. It is "
"considered by many to be deprecated, so we will install its replacement: "
"**pip**. Pip allows for uninstallation of packages, and is actively "
"maintained, unlike easy_install."
msgstr ""

#: ../../starting/install/win.rst:65
msgid ""
"To install pip, run the Python script available here: `get-pip.py <https://"
"raw.github.com/pypa/pip/master/contrib/get-pip.py>`_"
msgstr ""

#: ../../starting/installation.rst:2
msgid "Properly Installing Python"
msgstr "Installez correctement Python"

#: ../../starting/installation.rst:4
msgid ""
"There's a good chance that you already have Python on your operating system."
msgstr ""

#: ../../starting/installation.rst:6
msgid ""
"If so, you do not need to install or configure anything else to use Python. "
"Having said that, I would strongly recommend that you install the tools and "
"libraries described in the guides below before you start building Python "
"applications for real-world use. In particular, you should always install "
"Setuptools, Pip, and Virtualenv — they make it much easier for you to use "
"other third-party Python libraries."
msgstr ""

#: ../../starting/installation.rst:14
msgid "Installation Guides"
msgstr "Guides d'installation"

#: ../../starting/installation.rst:16
msgid ""
"These guides go over the proper installation of :ref:`Python 2.7 <which-"
"python>` for development purposes, as well as setuptools, pip, and "
"virtualenv setup."
msgstr ""

#: ../../starting/installation.rst:19
msgid ":ref:`Mac OS X <install-osx>`."
msgstr ":ref:`Mac OS X <install-osx>`."

#: ../../starting/installation.rst:20
msgid ":ref:`Microsoft Windows <install-windows>`."
msgstr ":ref:`Microsoft Windows <install-windows>`."

#: ../../starting/installation.rst:21
msgid ":ref:`Ubuntu Linux <install-linux>`."
msgstr ":ref:`Ubuntu Linux <install-linux>`."

#: ../../starting/which-python.rst:2
msgid "Picking an Interpreter"
msgstr "Choisir un interpréteur"

#: ../../starting/which-python.rst:7
msgid "The State of Python (2 vs 3)"
msgstr "L'état de Python (2 vs 3)"

#: ../../starting/which-python.rst:9
msgid ""
"When choosing a Python interpreter, one looming question is always present: "
"\"Should I choose Python 2 or Python 3\"? The answer is not as obvious as "
"one might think."
msgstr ""
"Quand vous choisissez un interpréteur Python,  une question imminente est "
"toujours présente:  \"Dois-je choisir Python 2 ou Python 3\"? La réponse "
"n'est pas toujours aussi évidente que l'on pourrait penser."

#: ../../starting/which-python.rst:14
msgid "The basic gist of the state of things is as follows:"
msgstr "Le fond de base de l'état des choses est comme suivant:"

#: ../../starting/which-python.rst:16
msgid "Python 2.7 has been the standard for a *long* time."
msgstr "Python 2.7 a été le standard depuis un temps assez *long*."

#: ../../starting/which-python.rst:17
msgid ""
"Python 3 introduced major changes to the language, which many developers are "
"unhappy with."
msgstr ""
"Python 3 introduit des changements majeurs dans le langage, avec lesquels de "
"nombreux développeurs ne sont pas contents."

#: ../../starting/which-python.rst:18
msgid ""
"Python 2.7 will receive necessary security updates until 2020 [#pep373_eol]_."
msgstr ""
"Python 2.7 recevra des mises à jour de sécurité nécessaires jusqu'en 2020 "
"[#pep373_eol]_."

#: ../../starting/which-python.rst:19
msgid "Python 3 is continually evolving, like Python 2 did in years past."
msgstr "Python 3 évolue constamment, comme Python 2 l'a fait dans le passé."

#: ../../starting/which-python.rst:21
msgid "So, you can now see why this is not such an easy decision."
msgstr ""
"Ainsi, vous pouvez maintenant voir pourquoi ce n'est pas une décision aussi "
"facile."

#: ../../starting/which-python.rst:25
msgid "Recommendations"
msgstr "Recommandations"

#: ../../starting/which-python.rst:27
msgid "I'll be blunt:"
msgstr "Je vais être franc:"

#: ../../starting/which-python.rst:30
msgid "**Use Python 3 if...**"
msgstr "**Utilisez Python 3 si...**"

#: ../../starting/which-python.rst:32
msgid "You don't care."
msgstr "Vous vous en moquez."

#: ../../starting/which-python.rst:33
msgid "You love Python 3."
msgstr "Vous adorez Python 3"

#: ../../starting/which-python.rst:34
msgid "You are indifferent towards 2 vs 3."
msgstr "Vous êtes indifférent vis à vis de 2 vs 3."

#: ../../starting/which-python.rst:35
msgid "You don't know which one to use."
msgstr "Vous ne savez pas lequel utiliser."

#: ../../starting/which-python.rst:36
msgid "You embrace change."
msgstr "Vous embrassez le changement."

#: ../../starting/which-python.rst:38
msgid "**Use Python 2 if...**"
msgstr "**Utilisez Python 2 si...**"

#: ../../starting/which-python.rst:40
msgid "You love Python 2 and are saddened by the future being Python 3."
msgstr ""
"Vous adorez Python 2 et êtes attristé par le fait que le futur soit Python 3."

#: ../../starting/which-python.rst:41
msgid ""
"The stability requirements of your software would be improved by a language "
"and runtime that never changes."
msgstr ""
"Les prérequis de stabilité de votre logiciel serait amélioré par un langage "
"et un moteur d'exécution qui ne change jamais."

#: ../../starting/which-python.rst:42
msgid "Software that you depend on requires it."
msgstr "Un logiciel dont vous dépendez le nécessite."

#: ../../starting/which-python.rst:46
msgid "So.... 3?"
msgstr "Ainsi... 3?"

#: ../../starting/which-python.rst:48
msgid ""
"If you're choosing a Python interpreter to use, and aren't opinionated, then "
"I recommend you use the newest Python 3.x, since every version brings new "
"and improved standard library modules, security and bug fixes. Progress is "
"progress."
msgstr ""
"Si vous choisissez un interpréteur Python à utiliser, et que vous n'avez pas "
"d'opinions arrêtées, alors je vous recommande d'utiliser la dernière version "
"de Python 3.x, comme chaque version apporte des modules de la bibliothèque "
"standard nouveaux et améliorés,  des corrections de bug et de sécurité. Le "
"progrès est le progrès."

#: ../../starting/which-python.rst:52
msgid ""
"Given such, only use Python 2 if you have a strong reason to, such as a "
"Python 2 exclusive library which has no adequate Python 3 ready alternative, "
"or you (like me) absolutely love and are inspired by Python 2."
msgstr ""
"Avec ces éléments, utilisez seulement Python 2 si vous avez une raison "
"importante pour cela, comme une bibliothèque exclusive à Python 2 qui n'a "
"pas d'alternative adéquate disponible en Python 3 , ou vous (comme moi) "
"adorez absolument et êtes inspiré par Python 2."

#: ../../starting/which-python.rst:56
msgid ""
"Check out `Can I Use Python 3? <https://caniusepython3.com/>`_ to see if any "
"software you're depending on will block your adoption of Python 3."
msgstr ""
"Consultez `Can I Use Python 3? <https://caniusepython3.com/>`_ pour voir si "
"un logiciel dont vous dépendez peut bloquer votre adoption de Python 3."

#: ../../starting/which-python.rst:59
msgid "`Further Reading <http://wiki.python.org/moin/Python2orPython3>`_"
msgstr "`Plus de lecture (en) <http://wiki.python.org/moin/Python2orPython3>`_"

#: ../../starting/which-python.rst:61
msgid ""
"It is possible to `write code that works on Python 2.6, 2.7, and Python 3 "
"<https://docs.python.org/3/howto/pyporting.html>`_. This ranges from trivial "
"to hard depending upon the kind of software you are writing; if you're a "
"beginner there are far more important things to worry about."
msgstr ""
"Il est possible `d'écrire du code qui fonctionne sur Python 2.6, 2.7, et sur "
"Python 3 <https://docs.python.org/3/howto/pyporting.html>`_. Cela varie de "
"problèmes triviaux à difficile selon le genre de logiciel que vous écrivez; "
"si vous êtes un débutant, il y a des choses beaucoup plus importantes à vous "
"soucier."

#: ../../starting/which-python.rst:68
msgid "Implementations"
msgstr "Implémentations"

#: ../../starting/which-python.rst:70
msgid ""
"When people speak of *Python* they often mean not just the language but also "
"the CPython implementation. *Python* is actually a specification for a "
"language that can be implemented in many different ways."
msgstr ""

#: ../../starting/which-python.rst:75
msgid "CPython"
msgstr "CPython"

#: ../../starting/which-python.rst:77
msgid ""
"`CPython <http://www.python.org>`_ is the reference implementation of "
"Python, written in C. It compiles Python code to intermediate bytecode which "
"is then interpreted by a virtual machine. CPython provides the highest level "
"of compatibility with Python packages and C extension modules."
msgstr ""

#: ../../starting/which-python.rst:82
msgid ""
"If you are writing open-source Python code and want to reach the widest "
"possible audience, targeting CPython is best. To use packages which rely on "
"C extensions to function, CPython is your only implementation option."
msgstr ""

#: ../../starting/which-python.rst:86
msgid ""
"All versions of the Python language are implemented in C because CPython is "
"the reference implementation."
msgstr ""

#: ../../starting/which-python.rst:90
msgid "PyPy"
msgstr "PyPy"

#: ../../starting/which-python.rst:92
msgid ""
"`PyPy <http://pypy.org/>`_ is a Python interpreter implemented in a "
"restricted statically-typed subset of the Python language called RPython. "
"The interpreter features a just-in-time compiler and supports multiple back-"
"ends (C, CLI, JVM)."
msgstr ""

#: ../../starting/which-python.rst:96
msgid ""
"PyPy aims for maximum compatibility with the reference CPython "
"implementation while improving performance."
msgstr ""

#: ../../starting/which-python.rst:99
msgid ""
"If you are looking to increase performance of your Python code, it's worth "
"giving PyPy a try. On a suite of benchmarks, it's currently `over 5 times "
"faster than CPython <http://speed.pypy.org/>`_."
msgstr ""

#: ../../starting/which-python.rst:103
msgid ""
"PyPy supports Python 2.7. PyPy3 [#pypy_ver]_, released in beta, targets "
"Python 3."
msgstr ""

#: ../../starting/which-python.rst:106
msgid "Jython"
msgstr "Jython"

#: ../../starting/which-python.rst:108
msgid ""
"`Jython <http://www.jython.org/>`_ is a Python implementation that compiles "
"Python code to Java bytecode which is then executed by the JVM (Java Virtual "
"Machine). Additionally, it is able to import and use any Java class like a "
"Python module."
msgstr ""

#: ../../starting/which-python.rst:113
msgid ""
"If you need to interface with an existing Java codebase or have other "
"reasons to need to write Python code for the JVM, Jython is the best choice."
msgstr ""

#: ../../starting/which-python.rst:116
msgid "Jython currently supports up to Python 2.7. [#jython_ver]_"
msgstr ""

#: ../../starting/which-python.rst:119
msgid "IronPython"
msgstr "IronPython"

#: ../../starting/which-python.rst:121
msgid ""
"`IronPython <http://ironpython.net/>`_  is an implementation of Python for "
"the .NET framework. It can use both Python and .NET framework libraries, and "
"can also expose Python code to other languages in the .NET framework."
msgstr ""

#: ../../starting/which-python.rst:125
msgid ""
"`Python Tools for Visual Studio <http://ironpython.net/tools/>`_ integrates "
"IronPython directly into the Visual Studio development environment, making "
"it an ideal choice for Windows developers."
msgstr ""

#: ../../starting/which-python.rst:129
msgid "IronPython supports Python 2.7. [#iron_ver]_"
msgstr "IronPython supporte Python 2.7. [#iron_ver]_"

#: ../../starting/which-python.rst:132
msgid "PythonNet"
msgstr "PythonNet"

#: ../../starting/which-python.rst:134
msgid ""
"`Python for .NET <http://pythonnet.github.io/>`_ is a package which provides "
"near seamless integration of a natively installed Python installation with "
"the .NET Common Language Runtime (CLR).  This is the inverse approach to "
"that taken by IronPython (see above), to which it is more complementary than "
"competing with."
msgstr ""

#: ../../starting/which-python.rst:140
msgid ""
"In conjunction with Mono, PythonNet enables native Python installations on "
"non-Windows operating systems, such as OS X and Linux, to operate within "
"the .NET framework.  It can be run in addition to IronPython without "
"conflict."
msgstr ""

#: ../../starting/which-python.rst:145
msgid "PythonNet supports from Python 2.3 up to Python 2.7. [#pythonnet_ver]_"
msgstr "PythonNet supporte de Python 2.3 jusqu'à Python 2.7. [#pythonnet_ver]_"

#: ../../starting/which-python.rst:147
msgid "http://pypy.org/compat.html"
msgstr "http://pypy.org/compat.html"

#: ../../starting/which-python.rst:149
msgid "https://hg.python.org/jython/file/412a8f9445f7/NEWS"
msgstr "https://hg.python.org/jython/file/412a8f9445f7/NEWS"

#: ../../starting/which-python.rst:151
msgid "http://ironpython.codeplex.com/releases/view/81726"
msgstr "http://ironpython.codeplex.com/releases/view/81726"

#: ../../starting/which-python.rst:153
msgid "http://pythonnet.github.io/readme.html"
msgstr "http://pythonnet.github.io/readme.html"

#: ../../starting/which-python.rst:155
msgid "https://www.python.org/dev/peps/pep-0373/#id2"
msgstr "https://www.python.org/dev/peps/pep-0373/#id2"

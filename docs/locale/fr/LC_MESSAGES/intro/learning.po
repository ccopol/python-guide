# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016. A <a
# href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a>
# Project. <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">CC
# BY-NC-SA 3.0</a>
# This file is distributed under the same license as the pythonguide
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pythonguide 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-03 01:22+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../intro/learning.rst:2
msgid "Learning Python"
msgstr ""

#: ../../intro/learning.rst:5
msgid "Beginner"
msgstr ""

#: ../../intro/learning.rst:8
msgid "The Python Tutorial"
msgstr ""

#: ../../intro/learning.rst:10
msgid ""
"This is the official tutorial. It covers all the basics, and offers a "
"tour of the language and the standard library. Recommended for those who "
"need a quick-start guide to the language."
msgstr ""

#: ../../intro/learning.rst:14
msgid "`The Python Tutorial <http://docs.python.org/tutorial/index.html>`_"
msgstr ""

#: ../../intro/learning.rst:17
msgid "Python for Beginners"
msgstr ""

#: ../../intro/learning.rst:19
msgid ""
"thepythonguru.com is a tutorial focuses on beginner programmers. It "
"covers many python concepts in depth. It also teaches you some advance "
"constructs of python like lambda expression, regular expression. At last "
"it finishes off with  tutorial \"How to access MySQL db using python\""
msgstr ""

#: ../../intro/learning.rst:24
msgid "`Python for beginners <http://thepythonguru.com/>`_"
msgstr ""

#: ../../intro/learning.rst:27
msgid "Learn Python Interactive Tutorial"
msgstr ""

#: ../../intro/learning.rst:29
msgid ""
"Learnpython.org is an easy non-intimidating way to get introduced to "
"Python. The website takes the same approach used on the popular `Try Ruby"
" <http://tryruby.org/>`_ website, it has an interactive Python "
"interpreter built into the site that allows you to go through the lessons"
" without having to install Python locally."
msgstr ""

#: ../../intro/learning.rst:35
msgid "`Learn Python <http://www.learnpython.org/>`_"
msgstr ""

#: ../../intro/learning.rst:38
msgid ""
"If you want a more traditional book, *Python For You and Me* is an "
"excellent resource for learning all aspects of the language."
msgstr ""

#: ../../intro/learning.rst:41
msgid "`Python for You and Me <http://pymbook.readthedocs.org/>`_"
msgstr ""

#: ../../intro/learning.rst:44
msgid "Online Python Tutor"
msgstr ""

#: ../../intro/learning.rst:46
msgid ""
"Online Python Tutor gives you a visual step by step representation of how"
" your program runs. Python Tutor helps people overcome a fundamental "
"barrier to learning programming by understanding what happens as the "
"computer executes each line of a program's source code."
msgstr ""

#: ../../intro/learning.rst:52
msgid "`Online Python Tutor <http://pythontutor.com/>`_"
msgstr ""

#: ../../intro/learning.rst:55
msgid "Invent Your Own Computer Games with Python"
msgstr ""

#: ../../intro/learning.rst:57
msgid ""
"This beginner's book is for those with no programming experience at all. "
"Each chapter has the source code to a small game, using these example "
"programs to demonstrate programming concepts to give the reader an idea "
"of what programs \"look like\"."
msgstr ""

#: ../../intro/learning.rst:62
msgid ""
"`Invent Your Own Computer Games with Python "
"<http://inventwithpython.com/>`_"
msgstr ""

#: ../../intro/learning.rst:66
msgid "Hacking Secret Ciphers with Python"
msgstr ""

#: ../../intro/learning.rst:68
msgid ""
"This book teaches Python programming and basic cryptography for absolute "
"beginners. The chapters provide the source code for various ciphers, as "
"well as programs that can break them."
msgstr ""

#: ../../intro/learning.rst:72
msgid ""
"`Hacking Secret Ciphers with Python "
"<http://inventwithpython.com/hacking/>`_"
msgstr ""

#: ../../intro/learning.rst:76
msgid "Learn Python the Hard Way"
msgstr ""

#: ../../intro/learning.rst:78
msgid ""
"This is an excellent beginner programmer's guide to Python. It covers "
"\"hello world\" from the console to the web."
msgstr ""

#: ../../intro/learning.rst:81
msgid "`Learn Python the Hard Way <http://learnpythonthehardway.org/book/>`_"
msgstr ""

#: ../../intro/learning.rst:85
msgid "Crash into Python"
msgstr ""

#: ../../intro/learning.rst:87
msgid ""
"Also known as *Python for Programmers with 3 Hours*, this guide gives "
"experienced developers from other languages a crash course on Python."
msgstr ""

#: ../../intro/learning.rst:90
msgid "`Crash into Python <http://stephensugden.com/crash_into_python/>`_"
msgstr ""

#: ../../intro/learning.rst:94
msgid "Dive Into Python 3"
msgstr ""

#: ../../intro/learning.rst:96
msgid ""
"Dive Into Python 3 is a good book for those ready to jump in to Python 3."
" It's a good read if you are moving from Python 2 to 3 or if you already "
"have some experience programming in another language."
msgstr ""

#: ../../intro/learning.rst:100
msgid "`Dive Into Python 3 <http://www.diveinto.org/python3/>`_"
msgstr ""

#: ../../intro/learning.rst:104
msgid "Think Python: How to Think Like a Computer Scientist"
msgstr ""

#: ../../intro/learning.rst:106
msgid ""
"Think Python attempts to give an introduction to basic concepts in "
"computer science through the use of the Python language. The focus was to"
" create a book with plenty of exercises, minimal jargon and a section in "
"each chapter devoted to the subject of debugging."
msgstr ""

#: ../../intro/learning.rst:111
msgid ""
"While exploring the various features available in the Python language the"
" author weaves in various design patterns and best practices."
msgstr ""

#: ../../intro/learning.rst:114
msgid ""
"The book also includes several case studies which have the reader explore"
" the topics discussed in the book in greater detail by applying those "
"topics to real-world examples. Case studies include assignments in GUI "
"and Markov Analysis."
msgstr ""

#: ../../intro/learning.rst:119
msgid "`Think Python <http://greenteapress.com/thinkpython/html/index.html>`_"
msgstr ""

#: ../../intro/learning.rst:123
msgid "Python Koans"
msgstr ""

#: ../../intro/learning.rst:125
msgid ""
"Python Koans is a port of Edgecase's Ruby Koans.  It uses a test-driven "
"approach, q.v. TEST DRIVEN DESIGN SECTION to provide an interactive "
"tutorial teaching basic Python concepts.  By fixing assertion statements "
"that fail in a test script, this provides sequential steps to learning "
"Python."
msgstr ""

#: ../../intro/learning.rst:130
msgid ""
"For those used to languages and figuring out puzzles on their own, this "
"can be a fun, attractive option. For those new to Python and programming,"
" having an additional resource or reference will be helpful."
msgstr ""

#: ../../intro/learning.rst:134
msgid "`Python Koans <http://bitbucket.org/gregmalcolm/python_koans>`_"
msgstr ""

#: ../../intro/learning.rst:136
msgid ""
"More information about test driven development can be found at these "
"resources:"
msgstr ""

#: ../../intro/learning.rst:138
msgid ""
"`Test Driven Development <http://en.wikipedia.org/wiki/Test-"
"driven_development>`_"
msgstr ""

#: ../../intro/learning.rst:142
msgid "A Byte of Python"
msgstr ""

#: ../../intro/learning.rst:144
msgid ""
"A free introductory book that teaches Python at the beginner level, it "
"assumes no previous programming experience."
msgstr ""

#: ../../intro/learning.rst:147
msgid ""
"`A Byte of Python for Python 2.x "
"<http://www.ibiblio.org/swaroopch/byteofpython/read/>`_ `A Byte of Python"
" for Python 3.x <http://swaroopch.com/notes/Python_en-Preface/>`_"
msgstr ""

#: ../../intro/learning.rst:152
msgid "Learn to Program in Python with Codeacademy"
msgstr ""

#: ../../intro/learning.rst:154
msgid ""
"A Codeacademy course for the absolute Python beginner. This free and "
"interactive course provides and teaches the basics (and beyond) of Python"
" programming whilst testing the user's knowledge in between progress. "
"This course also features a built-in interpreter for receiving instant "
"feedback on your learning."
msgstr ""

#: ../../intro/learning.rst:157
msgid ""
"`Learn to Program in Python with Codeacademy "
"<http://www.codecademy.com/en/tracks/python>`_"
msgstr ""

#: ../../intro/learning.rst:161
msgid "Intermediate"
msgstr ""

#: ../../intro/learning.rst:164
msgid "Effective Python"
msgstr ""

#: ../../intro/learning.rst:166
msgid ""
"This book contains 59 specific ways to improve writing Pythonic code. At "
"227 pages, it is a very brief overview of some of the most commons "
"adapations programmers need to make to become efficient intermediate "
"level Python programmers."
msgstr ""

#: ../../intro/learning.rst:171
msgid "`Effective Python <http://www.effectivepython.com/>`_"
msgstr ""

#: ../../intro/learning.rst:175
msgid "Advanced"
msgstr ""

#: ../../intro/learning.rst:178
msgid "Pro Python"
msgstr ""

#: ../../intro/learning.rst:180
msgid ""
"This book is for intermediate to advanced Python programmers who are "
"looking to understand how and why Python works the way it does and how "
"they can take their code to the next level."
msgstr ""

#: ../../intro/learning.rst:184
msgid "`Pro Python <http://propython.com>`_"
msgstr ""

#: ../../intro/learning.rst:188
msgid "Expert Python Programming"
msgstr ""

#: ../../intro/learning.rst:189
msgid ""
"Expert Python Programming deals with best practices in programming Python"
" and is focused on the more advanced crowd."
msgstr ""

#: ../../intro/learning.rst:192
msgid ""
"It starts with topics like decorators (with caching, proxy, and context "
"manager case-studies), method resolution order, using super() and meta-"
"programming, and general :pep:`8` best practices."
msgstr ""

#: ../../intro/learning.rst:196
msgid ""
"It has a detailed, multi-chapter case study on writing and releasing a "
"package and eventually an application, including a chapter on using "
"zc.buildout.  Later chapters detail best practices such as writing "
"documentation, test-driven development, version control, optimization and"
" profiling."
msgstr ""

#: ../../intro/learning.rst:201
msgid ""
"`Expert Python Programming <http://www.packtpub.com/expert-python-"
"programming/book>`_"
msgstr ""

#: ../../intro/learning.rst:205
msgid "A Guide to Python's Magic Methods"
msgstr ""

#: ../../intro/learning.rst:207
msgid ""
"This is a collection of blog posts by Rafe Kettler which explain 'magic "
"methods' in Python. Magic methods are surrounded by double underscores "
"(i.e. __init__) and can make classes and objects behave in different and "
"magical ways."
msgstr ""

#: ../../intro/learning.rst:211
msgid ""
"`A Guide to Python's Magic Methods "
"<http://www.rafekettler.com/magicmethods.html>`_"
msgstr ""

#: ../../intro/learning.rst:215
msgid "For Engineers and Scientists"
msgstr ""

#: ../../intro/learning.rst:218
msgid "A Primer on Scientific Programming with Python"
msgstr ""

#: ../../intro/learning.rst:220
msgid ""
"A Primer on Scientific Programming with Python, written by Hans Petter "
"Langtangen, mainly covers Python's usage in the scientific field. In the "
"book, examples are chosen from mathematics and the natural sciences."
msgstr ""

#: ../../intro/learning.rst:224
msgid ""
"`A Primer on Scientific Programming with Python "
"<http://www.springer.com/mathematics/computational+science+%26+engineering/book/978-3-642-30292-3>`_"
msgstr ""

#: ../../intro/learning.rst:227
msgid "Numerical Methods in Engineering with Python"
msgstr ""

#: ../../intro/learning.rst:229
msgid ""
"Numerical Methods in Engineering with Python, written by Jaan Kiusalaas, "
"puts the emphasis on numerical methods and how to implement them in "
"Python."
msgstr ""

#: ../../intro/learning.rst:232
msgid ""
"`Numerical Methods in Engineering with Python "
"<http://www.cambridge.org/us/academic/subjects/engineering/engineering-"
"mathematics-and-programming/numerical-methods-engineering-python-2nd-"
"edition>`_"
msgstr ""

#: ../../intro/learning.rst:235
msgid "Miscellaneous topics"
msgstr ""

#: ../../intro/learning.rst:238
msgid "Problem Solving with Algorithms and Data Structures"
msgstr ""

#: ../../intro/learning.rst:240
msgid ""
"Problem Solving with Algorithms and Data Structures covers a range of "
"data structures and algorithms. All concepts are illustrated with Python "
"code along with interactive samples that can be run directly in the "
"browser."
msgstr ""

#: ../../intro/learning.rst:244
msgid ""
"`Problem Solving with Algorithms and Data Structures "
"<http://www.interactivepython.org/courselib/static/pythonds/index.html>`_"
msgstr ""

#: ../../intro/learning.rst:248
msgid "Programming Collective Intelligence"
msgstr ""

#: ../../intro/learning.rst:250
msgid ""
"Programming Collective Intelligence introduces a wide array of basic "
"machine learning and data mining methods. The exposition is not very "
"mathematically formal, but rather focuses on explaining the underlying "
"intuition and shows how to implement the algorithms in Python."
msgstr ""

#: ../../intro/learning.rst:255
msgid ""
"`Programming Collective Intelligence "
"<http://shop.oreilly.com/product/9780596529321.do>`_"
msgstr ""

#: ../../intro/learning.rst:259
msgid "Transforming Code into Beautiful, Idiomatic Python"
msgstr ""

#: ../../intro/learning.rst:261
msgid ""
"Transforming Code into Beautiful, Idiomatic Python is a video by Raymond "
"Hettinger. Learn to take better advantage of Python's best features and "
"improve existing code through a series of code transformations, \"When "
"you see this, do that instead.\""
msgstr ""

#: ../../intro/learning.rst:265
msgid ""
"`Transforming Code into Beautiful, Idiomatic Python "
"<https://www.youtube.com/watch?v=OSGv2VnC0go>`_"
msgstr ""

#: ../../intro/learning.rst:269
msgid "Fullstack Python"
msgstr ""

#: ../../intro/learning.rst:271
msgid ""
"Fullstack Python offers a complete top-to-bottom resource for web "
"development using Python."
msgstr ""

#: ../../intro/learning.rst:274
msgid ""
"From setting up the webserver, to designing the front-end, choosing a "
"database, optimizing/scaling, etc."
msgstr ""

#: ../../intro/learning.rst:277
msgid ""
"As the name suggests, it covers everything you need to build and run a "
"complete web app from scratch."
msgstr ""

#: ../../intro/learning.rst:280
msgid "`Fullstack Python <https://www.fullstackpython.com>`_"
msgstr ""

#: ../../intro/learning.rst:284
msgid "References"
msgstr ""

#: ../../intro/learning.rst:287
msgid "Python in a Nutshell"
msgstr ""

#: ../../intro/learning.rst:289
msgid ""
"Python in a Nutshell, written by Alex Martelli, covers most cross-"
"platform Python's usage, from its syntax to built-in libraries to "
"advanced topics such as writing C extensions."
msgstr ""

#: ../../intro/learning.rst:293
msgid "`Python in a Nutshell <http://shop.oreilly.com/product/9780596001889.do>`_"
msgstr ""

#: ../../intro/learning.rst:296
msgid "The Python Language Reference"
msgstr ""

#: ../../intro/learning.rst:298
msgid ""
"This is Python's reference manual, it covers the syntax and the core "
"semantics of the language."
msgstr ""

#: ../../intro/learning.rst:301
msgid ""
"`The Python Language Reference "
"<http://docs.python.org/reference/index.html>`_"
msgstr ""

#: ../../intro/learning.rst:304
msgid "Python Essential Reference"
msgstr ""

#: ../../intro/learning.rst:306
msgid ""
"Python Essential Reference, written by David Beazley, is the definitive "
"reference guide to Python. It concisely explains both the core language "
"and the most essential parts of the standard library. It covers Python 3 "
"and 2.6 versions."
msgstr ""

#: ../../intro/learning.rst:310
msgid "`Python Essential Reference <http://www.dabeaz.com/per.html>`_"
msgstr ""

#: ../../intro/learning.rst:313
msgid "Python Pocket Reference"
msgstr ""

#: ../../intro/learning.rst:315
msgid ""
"Python Pocket Reference, written by Mark Lutz, is an easy to use "
"reference to the core language, with descriptions of commonly used "
"modules and toolkits. It covers Python 3 and 2.6 versions."
msgstr ""

#: ../../intro/learning.rst:319
msgid ""
"`Python Pocket Reference "
"<http://shop.oreilly.com/product/9780596158095.do>`_"
msgstr ""

#: ../../intro/learning.rst:322
msgid "Python Cookbook"
msgstr ""

#: ../../intro/learning.rst:324
msgid ""
"Python Cookbook, written by David Beazley and Brian K. Jones, is packed "
"with practical recipes. This book covers the core python language as well"
" as tasks common to a wide variety of application domains."
msgstr ""

#: ../../intro/learning.rst:328
msgid "`Python Cookbook <http://shop.oreilly.com/product/0636920027072.do>`_"
msgstr ""

#: ../../intro/learning.rst:331
msgid "Writing Idiomatic Python"
msgstr ""

#: ../../intro/learning.rst:333
msgid ""
"\"Writing Idiomatic Python\", written by Jeff Knupp, contains the most "
"common and important Python idioms in a format that maximizes "
"identification and understanding.  Each idiom is presented as a "
"recommendation of a way to write some commonly used piece of code, "
"followed by an explanation of why the idiom is important. It also "
"contains two code samples for each idiom: the \"Harmful\" way to write it"
" and the \"Idiomatic\" way."
msgstr ""

#: ../../intro/learning.rst:340
msgid ""
"`For Python 2.7.3+ <http://www.amazon.com/Writing-Idiomatic-"
"Python-2-7-3-Knupp/dp/1482372177/>`_"
msgstr ""

#: ../../intro/learning.rst:342
msgid ""
"`For Python 3.3+  <http://www.amazon.com/Writing-Idiomatic-Python-Jeff-"
"Knupp-ebook/dp/B00B5VXMRG/>`_"
msgstr ""


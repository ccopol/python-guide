# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016. A <a
# href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a>
# Project. <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">CC
# BY-NC-SA 3.0</a>
# This file is distributed under the same license as the pythonguide
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: pythonguide 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-03 01:22+0200\n"
"PO-Revision-Date: 2016-07-10 21:44+0100\n"
"Last-Translator: Thomas Gratier <thomas.gratier@webgeodatavore.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"X-Generator: Poedit 1.5.4\n"
"Language: fr\n"

#: ../../scenarios/scrape.rst:2
msgid "HTML Scraping"
msgstr "Scraping HTML"

#: ../../scenarios/scrape.rst:5
msgid "Web Scraping"
msgstr "Web Scraping"

#: ../../scenarios/scrape.rst:7
msgid ""
"Web sites are written using HTML, which means that each web page is a "
"structured document. Sometimes it would be great to obtain some data from "
"them and preserve the structure while we're at it. Web sites don't always "
"provide their data in comfortable formats such as ``csv`` or ``json``."
msgstr ""
"Les sites web sont écrits en utilisant HTML, ce qui signifie que chaque page "
"Web est un document structuré. Parfois, il serait bien d'obtenir des données "
"à partir d'elles et de préserver la structure pendant que nous y sommes. Les "
"sites web ne fournissent pas toujours leurs données dans des formats "
"confortables tels que le ``csv`` ou ``json``."

#: ../../scenarios/scrape.rst:12
msgid ""
"This is where web scraping comes in. Web scraping is the practice of using a "
"computer program to sift through a web page and gather the data that you "
"need in a format most useful to you while at the same time preserving the "
"structure of the data."
msgstr ""
"C'est là où le web scraping entre en jeu. Le web scraping est la pratique "
"d'utiliser un programme d'ordinateur pour passer au crible d'une page Web et "
"de recueillir les données dont vous avez besoin dans un format plus utile "
"pour vous tout en préservant la structure de la donnée."

#: ../../scenarios/scrape.rst:18
msgid "lxml and Requests"
msgstr "lxml et Requests"

#: ../../scenarios/scrape.rst:20
msgid ""
"`lxml <http://lxml.de/>`_ is a pretty extensive library written for parsing "
"XML and HTML documents very quickly, even handling messed up tags in the "
"process. We will also be using the `Requests <http://docs.python-requests."
"org/en/latest/>`_ module instead of the already built-in urllib2 module due "
"to improvements in speed and readability. You can easily install both using "
"``pip install lxml`` and ``pip install requests``."
msgstr ""
"`lxml <http://lxml.de/>`_ est une bibliothèque assez étendue, écrite pour "
"analyser des documents XML et HTML très rapidement, manipulant même des "
"balises invalides au cours du processus. Nous allons aussi utiliser le "
"module `Requests <http://docs.python-requests.org/en/latest/>`_  à la place "
"du module urllib2 natif à cause d'améliorations en terme de vitesse et de "
"lisibilité. Vous pouvez facilement installer les deux en utilisant ``pip "
"install lxml`` et ``pip install requests``."

#: ../../scenarios/scrape.rst:28
msgid "Let's start with the imports:"
msgstr "Commençons avec les imports:"

#: ../../scenarios/scrape.rst:35
msgid ""
"Next we will use ``requests.get`` to retrieve the web page with our data, "
"parse it using the ``html`` module and save the results in ``tree``:"
msgstr ""
"Ensuite, nous utiliserons ``requests.get`` pour récupérer la page web avec "
"notre donnée, la parser en utilisant le module ``html`` et sauver les "
"résultats dans `` tree``:"

#: ../../scenarios/scrape.rst:43
msgid ""
"(We need to use ``page.content`` rather than ``page.text`` because ``html."
"fromstring`` implicitly expects ``bytes`` as input.)"
msgstr ""
"(Nous avons besoin d'utiliser ``page.content`` plutôt que ``page.text`` "
"parce que ``html.fromstring`` attend implicitement des ``bytes`` en entrée.)"

#: ../../scenarios/scrape.rst:46
msgid ""
"``tree`` now contains the whole HTML file in a nice tree structure which we "
"can go over two different ways: XPath and CSSSelect. In this example, we "
"will focus on the former."
msgstr ""
"``tree`` contient maintenant le fichier HTML entier dans une belle structure "
"arborescente que nous pouvons parcourir de deux façons différentes: XPath et "
"CSSSelect. Dans cet exemple, nous allons nous concentrer sur le premier."

#: ../../scenarios/scrape.rst:50
msgid ""
"XPath is a way of locating information in structured documents such as HTML "
"or XML documents. A good introduction to XPath is on `W3Schools <http://www."
"w3schools.com/xsl/xpath_intro.asp>`_ ."
msgstr ""
"XPath est un moyen de trouver de l'information dans des documents structurés "
"tels que des documents HTML ou XML. Une bonne introduction à XPath est sur "
"`W3Schools <http://www.w3schools.com/xsl/xpath_intro.asp>`_ ."

#: ../../scenarios/scrape.rst:54
msgid ""
"There are also various tools for obtaining the XPath of elements such as "
"FireBug for Firefox or the Chrome Inspector. If you're using Chrome, you can "
"right click an element, choose 'Inspect element', highlight the code, right "
"click again and choose 'Copy XPath'."
msgstr ""
"Il existe également divers outils pour obtenir le XPath d'éléments comme "
"Firebug pour Firefox ou l'Inspecteur Chrome. Si vous utilisez Chrome, vous "
"pouvez faire un clic droit sur un élément, choisissez 'Inspecter', mettez en "
"surbrillance le code, faites un clic droit à nouveau et choisissez 'Copy' "
"puis 'Copy XPath' "

#: ../../scenarios/scrape.rst:59
msgid ""
"After a quick analysis, we see that in our page the data is contained in two "
"elements - one is a div with title 'buyer-name' and the other is a span with "
"class 'item-price':"
msgstr ""
"Après une analyse rapide, nous voyons que dans notre page les données sont "
"contenues dans deux éléments - l'un est une div avec le titre 'buyer-name' "
"et l'autre est un span avec la classe 'item-price':"

#: ../../scenarios/scrape.rst:68
msgid ""
"Knowing this we can create the correct XPath query and use the lxml "
"``xpath`` function like this:"
msgstr ""
"Sachant cela, nous pouvons créer la requête XPath correcte et utiliser la "
"fonction ``xpath`` lxml comme ceci:"

#: ../../scenarios/scrape.rst:78
msgid "Let's see what we got exactly:"
msgstr "Voyons voir ce que nous avons exactement:"

#: ../../scenarios/scrape.rst:98
msgid ""
"Congratulations! We have successfully scraped all the data we wanted from a "
"web page using lxml and Requests. We have it stored in memory as two lists. "
"Now we can do all sorts of cool stuff with it: we can analyze it using "
"Python or we can save it to a file and share it with the world."
msgstr ""
"Félicitations! Nous avons scrapé avec succès toutes les données que nous "
"voulions à partir d'une page Web en utilisant lxml et Requests. Nous les "
"avons stocké en mémoire, dans deux listes. Maintenant, nous pouvons faire "
"toutes sortes de trucs cools avec elles: nous pouvons l'analyser en "
"utilisant Python ou nous pouvons l'enregistrer dans un fichier et les "
"partager avec le monde."

#: ../../scenarios/scrape.rst:103
msgid ""
"Some more cool ideas to think about are modifying this script to iterate "
"through the rest of the pages of this example dataset, or rewriting this "
"application to use threads for improved speed."
msgstr ""
"Quelques idées plus cools sur lesquelles réfléchir sont de modifier ce "
"script pour parcourir le reste des pages de ce jeu de données exemple, ou la "
"réécriture de cette application pour utiliser les threads pour améliorer la "
"vitesse."

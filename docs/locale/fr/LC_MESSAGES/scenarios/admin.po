# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016. A <a
# href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a>
# Project. <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">CC
# BY-NC-SA 3.0</a>
# This file is distributed under the same license as the pythonguide
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: pythonguide 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-03 01:22+0200\n"
"PO-Revision-Date: 2016-07-10 07:59+0100\n"
"Last-Translator: Thomas Gratier <thomas.gratier@webgeodatavore.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"X-Generator: Poedit 1.5.4\n"
"Language: fr\n"

#: ../../scenarios/admin.rst:2
msgid "Systems Administration"
msgstr "Administration système"

#: ../../scenarios/admin.rst:5
msgid "Fabric"
msgstr "Fabric"

#: ../../scenarios/admin.rst:7
msgid ""
"`Fabric <http://docs.fabfile.org>`_ is a library for simplifying system "
"administration tasks. While Chef and Puppet tend to focus on managing "
"servers and system libraries, Fabric is more focused on application level "
"tasks such as deployment."
msgstr ""
"`Fabric <http://docs.fabfile.org>`_ est une bibliothèque pour simplifier les "
"tâches d'administration du système. Alors que Chef et Puppet ont tendance à "
"se concentrer sur la gestion des serveurs et des bibliothèques du système, "
"Fabric est plus concentré sur des tâches au niveau des applications telles "
"que le déploiement."

#: ../../scenarios/admin.rst:12
msgid "Install Fabric:"
msgstr "Installer Fabric:"

#: ../../scenarios/admin.rst:18
msgid ""
"The following code will create two tasks that we can use: ``memory_usage`` "
"and ``deploy``. The former will output the memory usage on each machine. The "
"latter will ssh into each server, cd to our project directory, activate the "
"virtual environment, pull the newest codebase, and restart the application "
"server."
msgstr ""
"Le code suivant va créer deux tâches que nous pouvons utiliser: "
"``memory_usage`` et ``deploy``. La première va retourner l'utilisation de la "
"mémoire sur chaque machine. La dernière va se connecter en ssh sur chaque "
"serveur, faire un cd dans notre répertoire de projet, activer "
"l'environnement virtuel, faire un pull de la base de code la plus récente et "
"redémarrer le serveur d'applications."

#: ../../scenarios/admin.rst:41
msgid ""
"With the previous code saved in a file named :file:`fabfile.py`, we can "
"check memory usage with:"
msgstr ""
"Avec le code précédent enregistré dans un fichier nommé :file:`fabfile.py`, "
"nous pouvons vérifier l'utilisation de la mémoire avec:"

#: ../../scenarios/admin.rst:61
msgid "and we can deploy with:"
msgstr "et nous pouvons déployer avec:"

#: ../../scenarios/admin.rst:67
msgid ""
"Additional features include parallel execution, interaction with remote "
"programs, and host grouping."
msgstr ""
"Des fonctionnalités additionnelles incluent l'exécution en parallèle, "
"l'interaction avec les programmes à distance, et le regroupement d'hôtes."

#: ../../scenarios/admin.rst:70
msgid "`Fabric Documentation <http://docs.fabfile.org>`_"
msgstr "`Documentation Fabric <http://docs.fabfile.org>`_"

#: ../../scenarios/admin.rst:73
msgid "Salt"
msgstr "Salt"

#: ../../scenarios/admin.rst:75
msgid ""
"`Salt <http://saltstack.org/>`_ is an open source infrastructure management "
"tool.  It supports remote command execution from a central point (master "
"host) to multiple hosts (minions). It also supports system states which can "
"be used to configure multiple servers using simple template files."
msgstr ""
"`Salt <http://saltstack.org/>`_ est un outil de gestion d'infrastructure "
"open source. Il supporte l'exécution de commandes à distance à partir d'un "
"point central (hôte maître) à plusieurs hôtes (minions). Il supporte "
"également  des états système qui peuvent être utilisés pour configurer "
"plusieurs serveurs à l'aide de fichiers modèle simples."

#: ../../scenarios/admin.rst:80
msgid "Salt supports Python versions 2.6 and 2.7 and can be installed via pip:"
msgstr ""
"Salt supporte les versions de Python 2.6 et 2.7 et peut être installé via "
"pip:"

#: ../../scenarios/admin.rst:86
msgid ""
"After configuring a master server and any number of minion hosts, we can run "
"arbitrary shell commands or use pre-built modules of complex commands on our "
"minions."
msgstr ""
"Après avoir configuré un serveur maître et un n'importe quel nombre d'hôtes "
"de minion, nous pouvons exécuter des commandes shell arbitraires ou utiliser "
"des modules pré-intégrés de commandes complexes sur nos minions."

#: ../../scenarios/admin.rst:90
msgid ""
"The following command lists all available minion hosts, using the ping "
"module."
msgstr ""
"La commande suivante liste tous les hôtes de minion disponibles, en "
"utilisant le module ping."

#: ../../scenarios/admin.rst:96
msgid ""
"The host filtering is accomplished by matching the minion id, or using the "
"grains system. The `grains <http://docs.saltstack.org/en/latest/topics/"
"targeting/grains.html>`_ system uses static host information like the "
"operating system version or the CPU architecture to provide a host taxonomy "
"for the Salt modules."
msgstr ""
"Le filtrage de l'hôte est accompli en faisant correspondre l'identifiant du "
"minion, ou en utilisant le système de grains. Le système `grains <http://"
"docs.saltstack.org/en/latest/topics/targeting/grains.html>`_ utilise des "
"informations d'hôte statique comme la version du système d'exploitation ou "
"de l'architecture du processeur pour fournir une taxonomie d'hôte pour les "
"modules Salt."

#: ../../scenarios/admin.rst:102
msgid ""
"The following command lists all available minions running CentOS using the "
"grains system:"
msgstr ""
"La commande suivante liste tous les minions disponibles exécutant CentOS, en "
"utilisant le système grains."

#: ../../scenarios/admin.rst:109
msgid ""
"Salt also provides a state system. States can be used to configure the "
"minion hosts."
msgstr ""
"Salt propose également un système d'état. Les états peuvent être utilisés "
"pour configurer les hôtes de minion."

#: ../../scenarios/admin.rst:112
msgid ""
"For example, when a minion host is ordered to read the following state file, "
"it will install and start the Apache server:"
msgstr ""
"Par exemple, quand un hôte de minion est commandé de lire le fichier d'état "
"suivant, il va installer et démarrer le serveur Apache:"

#: ../../scenarios/admin.rst:126
msgid ""
"State files can be written using YAML, the Jinja2 template system or pure "
"Python."
msgstr ""
"Les fichiers d'état peuvent être écrit en utilisant le YAML, le système de "
"template Jinja2 ou du Python pur."

#: ../../scenarios/admin.rst:128
msgid "`Salt Documentation <http://docs.saltstack.com>`_"
msgstr "`Documentation Salt <http://docs.saltstack.com>`_"

#: ../../scenarios/admin.rst:132
msgid "Psutil"
msgstr "Psutil"

#: ../../scenarios/admin.rst:134
msgid ""
"`Psutil <https://code.google.com/p/psutil/>`_ is an interface to different "
"system information (e.g. CPU, memory, disks, network, users and processes)."
msgstr ""
"`Psutil <https://code.google.com/p/psutil/>`_ est une interface pour "
"différentes informations système (par exemple, le CPU, la mémoire, les "
"disques, le réseau, les utilisateurs et les processus)."

#: ../../scenarios/admin.rst:137
msgid ""
"Here is an example to be aware of some server overload. If any of the tests "
"(net, CPU) fail, it will send an email."
msgstr ""
"Voici un exemple pour être au courant de la surcharge d'un serveur. Si l'un "
"des tests (net, CPU) échoue, il va envoyer un e-mail."

#: ../../scenarios/admin.rst:183
msgid ""
"A full terminal application like a widely extended top which is based on "
"psutil and with the ability of a client-server monitoring is `glance "
"<https://github.com/nicolargo/glances/>`_."
msgstr ""
"Une application complète dans le terminal similaire à une version de 'top' "
"très étendue, basée sur psutil et avec une capacité de monitoring client-"
"serveur est `glance <https://github.com/nicolargo/glances/>`_."

#: ../../scenarios/admin.rst:188
msgid "Ansible"
msgstr "Ansible"

#: ../../scenarios/admin.rst:190
msgid ""
"`Ansible <http://ansible.com/>`_  is an open source system automation tool. "
"The biggest advantage over Puppet or Chef is it does not require an agent on "
"the client machine. Playbooks are Ansible’s configuration, deployment, and "
"orchestration language and are written in in YAML with Jinja2 for templating."
msgstr ""
"`Ansible <http://ansible.com/>`_  est un outil d'automatisation système open "
"source. Le plus grand avantage sur Puppet ou Chef est qu'il ne nécessite pas "
"un agent sur la machine cliente. Les playbooks sont la configuration, le "
"déploiement, et le langage d'orchestration d'Ansible. Ils sont rédigés en "
"YAML avec Jinja2 pour le templating."

#: ../../scenarios/admin.rst:195
msgid ""
"Ansible supports Python versions 2.6 and 2.7 and can be installed via pip:"
msgstr ""
"Ansible supporte les versions 2.6 et 2.7 de Python et peut être installé via "
"pip:"

#: ../../scenarios/admin.rst:201
msgid ""
"Ansible requires an inventory file that describes the hosts to which it has "
"access. Below is an example of a host and playbook that will ping all the "
"hosts in the inventory file."
msgstr ""
"Ansible nécessite un fichier inventory qui décrit les hôtes auxquels il a "
"accès. Voici ci-dessous un exemple d'un hôte et d'un playbook qui va faire "
"un ping sur tous les hôtes dans le fichier inventory."

#: ../../scenarios/admin.rst:205
msgid "Here is an example inventory file: :file:`hosts.yml`"
msgstr "Voici un exemple de fichier inventory : :file:`hosts.yml`"

#: ../../scenarios/admin.rst:213
msgid "Here is an example playbook: :file:`ping.yml`"
msgstr "Voici un exemple de playbook: :file:`ping.yml`"

#: ../../scenarios/admin.rst:225
msgid "To run the playbook:"
msgstr "Pour exécuter le playbook:"

#: ../../scenarios/admin.rst:231
msgid ""
"The Ansible playbook will ping all of the servers in the :file:`hosts.yml` "
"file. You can also select groups of servers using Ansible. For more "
"information about Ansible, read the `Ansible Docs <http://docs.ansible.com/"
">`_."
msgstr ""
"Le playbook Ansible fera un ping sur tous les serveurs dans le fichier :file:"
"`hosts.yml`. Vous pouvez également sélectionner des groupes de serveurs "
"utilisant Ansible. Pour plus d'informations sur Ansible, lisez la "
"`documentation Ansible <http://docs.ansible.com/>` _."

#: ../../scenarios/admin.rst:235
msgid ""
"`An Ansible tutorial <https://serversforhackers.com/an-ansible-tutorial/>`_ "
"is also a great and detailed introduction to getting started with Ansible."
msgstr ""
"`An Ansible tutorial <https://serversforhackers.com/an-ansible-tutorial/>`_ "
"est aussi une bonne introduction, bien détaillée, pour commencer avec "
"Ansible."

#: ../../scenarios/admin.rst:240
msgid "Chef"
msgstr "Chef"

#: ../../scenarios/admin.rst:241
msgid ""
"`Chef <https://www.chef.io/chef/>`_  is a systems and cloud infrastructure "
"automation framework that makes it easy to deploy servers and applications "
"to any physical, virtual, or cloud location. In case this is your choice for "
"configuration management, you will primarily use Ruby to write your "
"infrastructure code."
msgstr ""
"`Chef <https://www.chef.io/chef/>`_ est un framework d'automatisation "
"système et infrastructure cloud qui rend facile de déployer des serveurs et "
"des applications à tout emplacement physique, virtuelle ou dans le cloud. "
"Dans le cas où c'est votre choix pour la gestion de la configuration, vous "
"utiliserez principalement Ruby pour écrire votre code d'infrastructure."

#: ../../scenarios/admin.rst:246
msgid ""
"Chef clients run on every server that is part of your infrastructure and "
"these regularly check with your Chef server to ensure your system is always "
"aligned and represents the desired state. Since each individual server has "
"its own distinct Chef client, each server configures itself and this "
"distributed approach makes Chef a scalable automation platform."
msgstr ""
"Les clients Chef s'exécutent sur chaque serveur qui fait partie de votre "
"infrastructure et ceux-ci vérifient régulièrement avec votre serveur Chef "
"pour assurer que votre système est toujours aligné et représente l'état "
"désiré. Étant donné que chaque serveur possède son propre client Chef "
"distinct, chaque serveur se configure lui-même et cette approche distribuée "
"fait de Chef une plate-forme d'automatisation évolutive."

#: ../../scenarios/admin.rst:251
msgid ""
"Chef works by using custom recipes (configuration elements), implemented in "
"cookbooks. Cookbooks, which are basically packages for infrastructure "
"choices, are usually stored in your Chef server. Read the `Digital Ocean "
"tutorial series <https://www.digitalocean.com/community/tutorials/how-to-"
"install-a-chef-server-workstation-and-client-on-ubuntu-vps-instances>`_ on "
"chef to learn how to create a simple Chef Server."
msgstr ""
"Chef fonctionne en utilisant des recettes personnalisées (éléments de "
"configuration), implémentés dans des cookbooks. Les cookbooks, qui sont "
"essentiellement des paquets pour des choix d'infrastructure, sont "
"généralement stockés dans votre serveur Chef. Lisez la `série de tutoriels "
"de Digital Ocean <https://www.digitalocean.com/community/tutorials/how-to-"
"install-a-chef-server-workstation-and-client-on-ubuntu-vps-instances>`_ sur "
"Chef pour apprendre comment créer un Serveur Chef simple."

#: ../../scenarios/admin.rst:257
msgid ""
"To create a simple cookbook the `knife <https://docs.chef.io/knife.html>`_ "
"command is used:"
msgstr ""
"Pour créer un cookbook simple, la commande  `knife <https://docs.chef.io/"
"knife.html>`_ est utilisée:"

#: ../../scenarios/admin.rst:263
msgid ""
"`Getting started with Chef <http://gettingstartedwithchef.com/first-steps-"
"with-chef.html>`_ is a good starting point for Chef Beginners and many "
"community maintained cookbooks that can serve as a good reference or tweaked "
"to serve your infrustructure configuration needs can be found on the `Chef "
"Supermarket <https://supermarket.chef.io/cookbooks>`_."
msgstr ""
"`Getting started with Chef <http://gettingstartedwithchef.com/first-steps-"
"with-chef.html>`_ est un bon point de départ pour les débutants en Chef. De "
"nombreux cookbooks maintenus par la communauté qui peuvent servir comme une "
"bonne référence ou personnalisés pour servir vos besoins de configuration de "
"infrastructure peuvent être trouvés sur le `Supermarket Chef <https://"
"supermarket.chef.io/cookbooks>`_."

#: ../../scenarios/admin.rst:268
msgid "`Chef Documentation <https://docs.chef.io/>`_"
msgstr "`Documentation Chef <https://docs.chef.io/>`_"

#: ../../scenarios/admin.rst:271
msgid "Puppet"
msgstr "Puppet"

#: ../../scenarios/admin.rst:273
msgid ""
"`Puppet <http://puppetlabs.com>`_ is IT Automation and configuration "
"management software from Puppet Labs that allows System Administrators to "
"define the state of their IT Infrastructure, thereby providing an elegant "
"way to manage their fleet of physical and virtual machines."
msgstr ""
"`Puppet <http://puppetlabs.com>`_ est un logiciel de gestion de "
"configuration et d'automatisation de Puppet Labs qui permet aux "
"administrateurs système de définir l'état de leur infrastructure "
"informatique, fournissant ainsi une manière élégante de gérer leur flotte de "
"machines physiques et virtuelles."

#: ../../scenarios/admin.rst:278
msgid ""
"Puppet is available both as an Open Source and an Enterprise variant. "
"Modules are small, shareable units of code written to automate or define the "
"state of a system.  `Puppet Forge <https://forge.puppetlabs.com/>`_ is a "
"repository for modules written by the community for Open Source and "
"Enterprise Puppet."
msgstr ""
"Puppet est disponible à la fois en variante Open Source et Entreprise. Les "
"modules sont de petites unités de code partageables écrites pour automatiser "
"ou définir l'état d'un système. `La forge Puppet <https://forge.puppetlabs."
"com/>`_ est un dépôt pour les modules écrits par la communauté pour Puppet "
"Open Source et Entreprise."

#: ../../scenarios/admin.rst:283
msgid ""
"Puppet Agents are installed on nodes whose state needs to be monitored or "
"changed.  A designated server known as the Puppet Master is responsible for "
"orchestrating the agent nodes."
msgstr ""
"Les agents de Puppet sont installés sur des nœuds dont l'état doit être "
"contrôlé ou changé. Un serveur désigné connu comme le Puppet Master est "
"responsable de l'orchestration de l'agent des nœuds."

#: ../../scenarios/admin.rst:287
msgid ""
"Agent nodes send basic facts about the system such as to the operating "
"system, kernel, architecture, ip address, hostname etc. to the Puppet "
"Master. The Puppet Master then compiles a catalog with information provided "
"by the agents on how each node should be configured and sends it to the "
"agent. The agent enforces the change as prescribed in the catalog and sends "
"a report back to the Puppet Master."
msgstr ""
"L'agent des nœuds envoie des facts de base à propos du système comme le "
"système d'exploitation, le kernel, l'adresse ip, le nom d'hôte, etc. au "
"Puppet Master. Le Puppet Master ensuite compile un catalogue avec les "
"informations fournies par les agents  sur comment chaque nœud doit être "
"configuré et l'envoie à l'agent. L'agent applique le changement comme "
"prescrit dans le catalogue et renvoie un rapport au Puppet Master."

#: ../../scenarios/admin.rst:294
msgid ""
"Facter is an interesting tool that ships with Puppet that pulls basic facts "
"about the system. These facts can be referenced as a variable while writing "
"your Puppet modules."
msgstr ""
"Facter est un outil intéressant qui est livré avec Puppet qui récupère des "
"facts de base sur le système. Ces facts peuvent être référencés comme une "
"variable tout en écrivant vos modules Puppet."

#: ../../scenarios/admin.rst:307
msgid ""
"Writing Modules in Puppet is pretty straight forward. Puppet Manifests "
"together form Puppet Modules. Puppet manifest end with an extension of ``."
"pp``. Here is an example of 'Hello World' in Puppet."
msgstr ""
"L'écriture des modules dans Puppet est assez simple. Les manifestes Puppet "
"forment ensemble les modules Puppet. Les manifestes Puppet se terminent avec "
"une extension ``.pp``. Voici un exemple de 'Hello World' en Puppet."

#: ../../scenarios/admin.rst:319
msgid ""
"Here is another example with system based logic. Note how the operating "
"system fact is being used as a variable prepended with the ``$`` sign. "
"Similarly, this holds true for other facts such as hostname which can be "
"referenced by ``$hostname``"
msgstr ""
"Voici un autre exemple avec une logique basée sur le système. Notez comment "
"le fact du système d'exploitation est utilisé comme une variable préfixé "
"avec le signe ``$``. De même, cela vaut pour d'autres facts tels que le nom "
"d'hôte qui peut être référencé par ``$hostname``"

#: ../../scenarios/admin.rst:333
msgid ""
"There are several resource types for Puppet but the package-file-service "
"paradigm is all you need for undertaking majority of the configuration "
"management. The following Puppet code makes sure that the OpenSSH-Server "
"package is installed in a system and the sshd service is notified to restart "
"everytime the sshd configuration file is changed."
msgstr ""
"Il existe plusieurs types de ressources pour Puppet, mais le paradigme "
"package-fichier-service est tout ce qu'il faut pour entreprendre la majorité "
"de la gestion de la configuration. Le code Puppet suivant s'assure que le "
"paquet OpenSSH-Server est installé dans un système et le service sshd est "
"averti de redémarrer chaque fois que le fichier de configuration de sshd est "
"modifié."

#: ../../scenarios/admin.rst:364
msgid ""
"For more information, refer to the `Puppet Labs Documentation <http://docs."
"puppetlabs.com>`_"
msgstr ""
"Pour plus d'informations, se référer à la `Documentation Puppet Labs <http://"
"docs.puppetlabs.com>`_"

#: ../../scenarios/admin.rst:367
msgid "Blueprint"
msgstr "Blueprint"

#: ../../scenarios/admin.rst
msgid "À faire"
msgstr "À faire"

#: ../../scenarios/admin.rst:369
msgid "Write about Blueprint"
msgstr "Ecrire à propos de Blueprint"

#: ../../scenarios/admin.rst:372
msgid "Buildout"
msgstr "Buildout"

#: ../../scenarios/admin.rst:374
msgid ""
"`Buildout <http://www.buildout.org>`_ is an open source software build tool. "
"Buildout is created using the Python programming language. It implements a "
"principle of separation of configuration from the scripts that do the "
"setting up. Buildout is primarily used to download and set up dependencies "
"in Python eggs format of the software being developed or deployed. Recipes "
"for build tasks in any environment can be created, and many are already "
"available."
msgstr ""
"`Buildout <http://www.buildout.org>`_ est un outil de build logiciel open "
"source. Buildout est créé en utilisant le langage de programmation Python. "
"Il implémente un principe de séparation de configuration à partir des "
"scripts qui font la configuration. Buildout est principalement utilisé pour "
"télécharger et configurer des dépendances dans le format eggs Python du "
"logiciel en cours de développement ou déployé. Les recettes pour des tâches "
"de build dans tous les environnements peuvent être créés, et beaucoup sont "
"déjà disponibles."

#: ../../scenarios/admin.rst:381
msgid "Buidout is written in Python."
msgstr "Buidout est écrit en Python."

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016. A <a
# href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a>
# Project. <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">CC
# BY-NC-SA 3.0</a>
# This file is distributed under the same license as the pythonguide
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: pythonguide 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-03 01:22+0200\n"
"PO-Revision-Date: 2016-07-08 17:44+0100\n"
"Last-Translator: Thomas Gratier <thomas.gratier@webgeodatavore.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"Language: fr\n"
"X-Generator: Poedit 1.5.4\n"

#: ../../dev/env.rst:2
msgid "Your Development Environment"
msgstr "Votre environnement de développement"

#: ../../dev/env.rst:6
msgid "Text Editors"
msgstr "Éditeurs de texte"

#: ../../dev/env.rst:8
msgid ""
"Just about anything that can edit plain text will work for writing Python "
"code, however, using a more powerful editor may make your life a bit easier."
msgstr ""
"Tout ce qui peut éditer du texte brut peut fonctionner pour l'écriture de "
"code Python. Cependant, utiliser un éditeur plus puissant peut vous rendre "
"la vie un peu plus facile."

#: ../../dev/env.rst:13
msgid "Vim"
msgstr "Vim"

#: ../../dev/env.rst:15
msgid ""
"Vim is a text editor which uses keyboard shortcuts for editing instead of "
"menus or icons. There are a couple of plugins and settings for the Vim "
"editor to aid Python development. If you only develop in Python, a good "
"start is to set the default settings for indentation and line-wrapping to "
"values compliant with :pep:`8`. In your home directory, open a file called :"
"file:`.vimrc` and add the following lines::"
msgstr ""
"Vim est un éditeur de texte qui utilise des raccourcis clavier pour éditer "
"au lieu de menus ou d'icônes. Il y a des couples plugins et paramètres pour "
"l'éditeur Vim pour faciliter le développement Python. Si vous développez "
"seulement en Python, un bon point de départ est de définir les paramètres "
"par défaut pour l'indentation et les valeurs pour les retours à la ligne "
"conformes à :pep:`8`. Dans votre répertoire \"home\", ouvrez un fichier "
"appelé :file:`.vimrc` et ajoutez les lignes suivantes::"

#: ../../dev/env.rst:30
msgid ""
"With these settings, newlines are inserted after 79 characters and "
"indentation is set to 4 spaces per tab. If you also use Vim for other "
"languages, there is a handy plugin called indent_, which handles indentation "
"settings for Python source files."
msgstr ""
"Avec ces configurations, des retours à la ligne sont insérés après 79 "
"caractères et l'indentation est définie à 4 espaces par tabulation. Si vous "
"utilisez Vim pour d'autres langages, il y a un plugin pratique appelé "
"indent_, qui peut gérer la configuration de l'indentation des fichiers "
"source Python."

#: ../../dev/env.rst:35
msgid ""
"There is also a handy syntax plugin called syntax_ featuring some "
"improvements over the syntax file included in Vim 6.1."
msgstr ""
"Il y a aussi un plugin de syntaxe pratique appelée syntax_ avec quelques "
"améliorations par rapport au fichier de syntaxe inclus dans Vim 6.1."

#: ../../dev/env.rst:38
msgid ""
"These plugins supply you with a basic environment for developing in Python. "
"To get the most out of Vim, you should continually check your code for "
"syntax errors and PEP8 compliance. Luckily PEP8_ and Pyflakes_ will do this "
"for you. If your Vim is compiled with :option:`+python` you can also utilize "
"some very handy plugins to do these checks from within the editor."
msgstr ""
"Ces plugins vous fournissent un environnement de base pour le développement "
"en Python. Pour tirer le meilleur parti de Vim, vous devriez vérifier en "
"continu  votre code pour les erreurs de syntaxe et la conformité à PEP8. "
"Heureusement, PEP8_ and Pyflakes_  vont le faire pour vous. Si votre Vim est "
"compilé avec :option:`+python`, vous pouvez également utiliser certains "
"plugins très pratiques pour faire ces vérifications depuis l'éditeur."

#: ../../dev/env.rst:44
msgid ""
"For PEP8 checking and pyflakes, you can install vim-flake8_. Now you can map "
"the function ``Flake8`` to any hotkey or action you want in Vim. The plugin "
"will display errors at the bottom of the screen, and provide an easy way to "
"jump to the corresponding line. It's very handy to call this function "
"whenever you save a file. In order to do this, add the following line to "
"your :file:`.vimrc`::"
msgstr ""
"Pour vérification PEP8 et pyflakes, vous pouvez installer vim-flake8_. "
"Maintenant, vous pouvez mapper la fonction ``Flake8`` à tout raccourci "
"clavier ou de action que vous voulez dans Vim. Le plugin affichera les "
"erreurs au bas de l'écran, et fournira un moyen facile de sauter à la ligne "
"correspondante. Il est très pratique d'appeler cette fonction chaque fois "
"que vous enregistrez un fichier. Pour ce faire, ajoutez la ligne suivante à "
"votre :file:`.vimrc`::"

#: ../../dev/env.rst:53
msgid ""
"If you are already using syntastic_, you can set it to run Pyflakes on write "
"and show errors and warnings in the quickfix window. An example "
"configuration to do that which also shows status and warning messages in the "
"statusbar would be::"
msgstr ""
"Si vous utilisez déjà syntastic_, vous pouvez le configurer pour exécuter "
"Pyflakes à l'écriture et montrer les erreurs et avertissements dans la "
"fenêtre de correction rapide. Un exemple de configuration pour faire cela et "
"qui montre également le statut et les messages d'alerte dans la barre d'état "
"serait ::"

#: ../../dev/env.rst:66
msgid "Python-mode"
msgstr "Python-mode"

#: ../../dev/env.rst:68
msgid ""
"Python-mode_ is a complex solution for working with Python code in Vim. It "
"has:"
msgstr ""
"Python-mode_ est une solution complexe pour travailler avec du code Python "
"dans Vim. Il a:"

#: ../../dev/env.rst:71
msgid ""
"Asynchronous Python code checking (``pylint``, ``pyflakes``, ``pep8``, "
"``mccabe``) in any combination"
msgstr ""
"Vérification de code Python asynchrone (``pylint``, ``pyflakes``, ``pep8``, "
"``mccabe``) avec n'importe quelle combinaison"

#: ../../dev/env.rst:72
msgid "Code refactoring and autocompletion with Rope"
msgstr "Refactoring de code et autocomplétion avec Rope"

#: ../../dev/env.rst:73
msgid "Fast Python folding"
msgstr "Dépliage de code Python rapide"

#: ../../dev/env.rst:74
msgid "Virtualenv support"
msgstr "Support de virtualenv"

#: ../../dev/env.rst:75
msgid "Search through Python documentation and run Python code"
msgstr "Recherche dans la documentation Python et exécution de code Python"

#: ../../dev/env.rst:76
msgid "Auto PEP8_ error fixes"
msgstr "Correction automatiques des erreurs PEP8_"

#: ../../dev/env.rst:78
msgid "And more."
msgstr "Et plus."

#: ../../dev/env.rst:81
msgid "SuperTab"
msgstr "SuperTab"

#: ../../dev/env.rst:83
msgid ""
"SuperTab_ is a small Vim plugin that makes code completion more convenient "
"by using ``<Tab>`` key or any other customized keys."
msgstr ""
"SuperTab_ est un petit plugin Vim qui rend la complétion de code plus "
"pratique en utilisant la touche ``<Tab>`` (tabulation) ou n'importe quelles "
"autres touches personnalisées."

#: ../../dev/env.rst:96
msgid "Emacs"
msgstr "Emacs"

#: ../../dev/env.rst:98
msgid ""
"Emacs is another powerful text editor. It is fully programmable (lisp), but "
"it can be some work to wire up correctly. A good start if you're already an "
"Emacs user is `Python Programming in Emacs`_ at EmacsWiki."
msgstr ""
"Emacs est un autre éditeur de texte puissant. Il est entièrement "
"programmable (Lisp), mais il peut nécessiter un peu de travail pour être "
"correctement configurer. Un bon début si vous êtes déjà un utilisateur Emacs "
"est `Python Programming in Emacs`_ sur EmacsWiki."

#: ../../dev/env.rst:102
msgid "Emacs itself comes with a Python mode."
msgstr "Emacs lui-même contient un mode pour Python."

#: ../../dev/env.rst:107
msgid "TextMate"
msgstr "TextMate"

#: ../../dev/env.rst:109
msgid ""
"`TextMate <http://macromates.com/>`_ brings Apple's approach to operating "
"systems into the world of text editors. By bridging UNIX underpinnings and "
"GUI, TextMate cherry-picks the best of both worlds to the benefit of expert "
"scripters and novice users alike."
msgstr ""
"`TextMate <http://macromates.com/>`_ apporte l'approche d'Apple aux systèmes "
"d'exploitation dans le monde des éditeurs de texte. En établissant un pont "
"entre les fondements UNIX et les interfaces graphiques,TextMate choisit le "
"meilleur des deux mondes au bénéfice aussi bien des scripteurs experts que "
"des utilisateurs novices."

#: ../../dev/env.rst:115
msgid "Sublime Text"
msgstr "Sublime Text"

#: ../../dev/env.rst:117
msgid ""
"`Sublime Text <http://www.sublimetext.com/>`_ is a sophisticated text editor "
"for code, markup and prose. You'll love the slick user interface, "
"extraordinary features and amazing performance."
msgstr ""
"`Sublime Text <http://www.sublimetext.com/>`_ est un éditeur de texte "
"raffiné pour le code, le balisage et la prose. Vous allez adorer l'interface "
"utilisateur agréable, les fonctionnalités extraordinaires et les "
"performances incroyables."

#: ../../dev/env.rst:121
msgid ""
"Sublime Text has excellent support for editing Python code and uses Python "
"for its plugin API. It also has a diverse variety of plugins, `some of which "
"<https://github.com/SublimeLinter/SublimeLinter>`_ allow for in-editor PEP8 "
"checking and code \"linting\"."
msgstr ""
"Sublime Text offre un excellent support pour l'édition du code Python et "
"utilise Python pour son API de plugin. Il a également une grande diversité "
"de plugins, `certains <https://github.com/SublimeLinter/SublimeLinter>`_ "
"permettent une vérification PEP8 dans l'éditeur et le \"linting\" de code."

#: ../../dev/env.rst:127
msgid "Atom"
msgstr "Atom"

#: ../../dev/env.rst:129
msgid ""
"`Atom <https://atom.io/>`_ is a hackable text editor for the 21st century, "
"built on atom-shell, and based on everything we love about our favorite "
"editors."
msgstr ""
"`Atom <https://atom.io/>`_ est un éditeur de texte hackable pour le 21e "
"siècle, construit sur atom-shell et sur la base de tout ce que nous aimons "
"dans nos éditeurs favoris."

#: ../../dev/env.rst:133
msgid ""
"Atom is web native (HTML, CSS, JS), focusing on modular design and easy "
"plugin development. It comes with native package control and plethora of "
"packages. Recommended for Python development is `Linter <https://github.com/"
"AtomLinter/Linter>`_ combined with `linter-flake8 <https://github.com/"
"AtomLinter/linter-flake8>`_."
msgstr ""
"Atom est basé sur le web (HTML, CSS, JS), en se concentrant sur une "
"conception modulaire et le développement de plugin facile. Il est livré avec "
"un gestionnaire de paquets natif et une pléthore de paquets. Il est "
"recommandé pour le développement Python d'utiliser `Linter <https://github."
"com/AtomLinter/Linter>`_ combiné avec `linter-flake8 <https://github.com/"
"AtomLinter/linter-flake8>`_."

#: ../../dev/env.rst:141
msgid "IDEs"
msgstr "IDEs"

#: ../../dev/env.rst:144
msgid "PyCharm / IntelliJ IDEA"
msgstr "PyCharm / IntelliJ IDEA"

#: ../../dev/env.rst:146
msgid ""
"`PyCharm <http://www.jetbrains.com/pycharm/>`_ is developed by JetBrains, "
"also known for IntelliJ IDEA. Both share the same code base and most of "
"PyCharm's features can be brought to IntelliJ with the free `Python Plug-In "
"<https://plugins.jetbrains.com/plugin/?idea&pluginId=631>`_.  There are two "
"versions of PyCharm: Professional Edition (Free 30-day trial) and Community "
"Edition(Apache 2.0 License) with fewer features."
msgstr ""
"`PyCharm <http://www.jetbrains.com/pycharm/>`_ est développé par JetBrains, "
"aussi connu pour IntelliJ IDEA. Les deux partagent la même base de code et "
"la plupart des fonctionnalités de PyCharm peuvent être accessibles dans "
"IntelliJ avec le `Plug-in Python <https://plugins.jetbrains.com/plugin/?"
"idea&pluginId=631>`_ gratuit.  Il y a deux versions de PyCharm: une édition "
"Professionnel (avec 30 jours d'essai gratuits) et une édition Communautaire "
"(sous licence Apache 2.0) avec moins de fonctionnalités."

#: ../../dev/env.rst:154
msgid "Enthought Canopy"
msgstr "Enthought Canopy"

#: ../../dev/env.rst:155
msgid ""
"`Enthought Canopy <https://www.enthought.com/products/canopy/>`_ is a Python "
"IDE which is focused towards Scientists and Engineers as it provides pre "
"installed libraries for data analysis."
msgstr ""
"`Enthought Canopy <https://www.enthought.com/products/canopy/>`_ est un IDE "
"Python qui est axé vers les scientifiques et les ingénieurs car il fournit "
"des bibliothèques pré-installées pour l'analyse de données."

#: ../../dev/env.rst:160
msgid "Eclipse"
msgstr "Eclipse"

#: ../../dev/env.rst:162
msgid ""
"The most popular Eclipse plugin for Python development is Aptana's `PyDev "
"<http://pydev.org>`_."
msgstr ""
"Le plugin Eclipse le plus populaire pour le développement Python est `PyDev "
"<http://pydev.org>`_ de Aptana."

#: ../../dev/env.rst:167
msgid "Komodo IDE"
msgstr "Komodo IDE"

#: ../../dev/env.rst:169
msgid ""
"`Komodo IDE <http://www.activestate.com/komodo-ide>`_ is developed by "
"ActiveState and is a commercial IDE for Windows, Mac, and Linux. `KomodoEdit "
"<https://github.com/Komodo/KomodoEdit>`_ is the open source alternative."
msgstr ""
"`Komodo IDE <http://www.activestate.com/komodo-ide>`_ est développé par "
"ActiveState et est un IDE commercial pour Windows, Mac et Linux. `KomodoEdit "
"<https://github.com/Komodo/KomodoEdit>`_ est l'alternative open source."

#: ../../dev/env.rst:176
msgid "Spyder"
msgstr "Spyder"

#: ../../dev/env.rst:178
msgid ""
"`Spyder <https://github.com/spyder-ide/spyder>`_ is an IDE specifically "
"geared toward working with scientific Python libraries (namely `Scipy "
"<http://www.scipy.org/>`_). It includes integration with pyflakes_, `pylint "
"<http://www.logilab.org/857>`_ and `rope <https://github.com/python-rope/"
"rope>`_."
msgstr ""
"`Spyder <https://github.com/spyder-ide/spyder>`_ est un IDE spécifiquement "
"orienté vers l'utilisation de bibliothèques Python scientifiques (notamment "
"`Scipy <http://www.scipy.org/>`_). Il inclut l'intégration avec pyflakes_, "
"`pylint <http://www.logilab.org/857>`_ et `rope <https://github.com/python-"
"rope/rope>`_."

#: ../../dev/env.rst:184
msgid ""
"Spyder is open-source (free), offers code completion, syntax highlighting, a "
"class and function browser, and object inspection."
msgstr ""
"Spyder est open-source (libre), offre la complétion de code, la coloration "
"syntaxique, un navigateur de classes et de fonctions et l'inspection "
"d'objets."

#: ../../dev/env.rst:189
msgid "WingIDE"
msgstr "WingIDE"

#: ../../dev/env.rst:191
msgid ""
"`WingIDE <http://wingware.com/>`_ is a Python specific IDE. It runs on "
"Linux, Windows and Mac (as an X11 application, which frustrates some Mac "
"users)."
msgstr ""
"`WingIDE <http://wingware.com/>`_ est un IDE spécifique Python. Il "
"fonctionne sur Linux, Windows et Mac (comme application X11, ce qui frustre "
"certains utilisateurs de Mac)."

#: ../../dev/env.rst:194
msgid ""
"WingIDE offers code completion, syntax highlighting, source browser, "
"graphical debugger and support for version control systems."
msgstr ""
"WingIDE offre la complétion de code, la coloration syntaxique, la navigation "
"de sources, le débogueur graphique et le support pour les systèmes de "
"gestion de version."

#: ../../dev/env.rst:199
msgid "NINJA-IDE"
msgstr "NINJA-IDE"

#: ../../dev/env.rst:201
msgid ""
"`NINJA-IDE <http://www.ninja-ide.org/>`_ (from the recursive acronym: "
"\"Ninja-IDE Is Not Just Another IDE\") is a cross-platform IDE, specially "
"designed to build Python applications, and runs on Linux/X11, Mac OS X and "
"Windows desktop operating systems. Installers for these platforms can be "
"downloaded from the website."
msgstr ""
"`NINJA-IDE <http://www.ninja-ide.org/>`_ (depuis l'acronyme récursif: "
"\"Ninja-IDE Is Not Just Another IDE\") est un IDE multi-plateformes, "
"spécialement conçu pour créer des applications Python, et qui fonctionne "
"sous les systèmes d'exploitation de bureau Linux/X11, Mac OS X et Windows. "
"Les installateurs pour ces plates-formes peuvent être téléchargés à partir "
"du site web."

#: ../../dev/env.rst:207
msgid ""
"NINJA-IDE is open-source software (GPLv3 licence) and is developed in Python "
"and Qt. The source files can be downloaded from `GitHub <https://github.com/"
"ninja-ide>`_."
msgstr ""
"NINJA-IDE est un logiciel open-source (licence GPLv3) et est développé en "
"Python et Qt. Les fichiers source peuvent être téléchargés depuis `GitHub "
"<https://github.com/ninja-ide>`_."

#: ../../dev/env.rst:213
msgid "Eric (The Eric Python IDE)"
msgstr "Eric (l'IDE Python Eric)"

#: ../../dev/env.rst:215
msgid ""
"`Eric <http://eric-ide.python-projects.org/>`_ is a full featured Python IDE "
"offering sourcecode autocompletion, syntax highlighting, support for version "
"control systems, python 3 support, integrated web browser, python shell, "
"integrated debugger and a flexible plug-in system. Written in python, it is "
"based on the Qt gui toolkit, integrating the Scintilla editor control. Eric "
"is an open-source software project (GPLv3 licence) with more than ten years "
"of active development."
msgstr ""
"`Eric <http://eric-ide.python-projects.org/>`_ est un IDE Python très "
"complet offrant l'autocomplétion du code source, la coloration syntaxique, "
"le support des systèmes de gestion de version, le support Python 3, un "
"navigateur Web intégré, un shell python, un débogueur intégré et un système "
"de plug-in flexible. Écrit en Python, il est basé sur la boîte à outils "
"graphique Qt, intégrant le contrôle de l'éditeur Scintilla. Eric est un "
"projet de logiciel open-source (licence GPLv3) avec plus de dix ans de "
"développement actif."

#: ../../dev/env.rst:225
msgid "Interpreter Tools"
msgstr "Outils pour l'interpréteur"

#: ../../dev/env.rst:229
msgid "Virtual Environments"
msgstr "Environnements virtuels"

#: ../../dev/env.rst:231
msgid ""
"Virtual Environments provide a powerful way to isolate project package "
"dependencies. This means that you can use packages particular to a Python "
"project without installing them system wide and thus avoiding potential "
"version conflicts."
msgstr ""
"Les environnements virtuels fournissent un moyen puissant pour isoler les "
"dépendances de paquets d'un projet. Cela signifie que vous pouvez utiliser "
"des paquets particuliers à un projet Python sans les installer sur "
"l'ensemble du système et ainsi en évitant ainsi la les conflits de version "
"potentiels."

#: ../../dev/env.rst:233
msgid ""
"To start using and see more information: `Virtual Environments <http://"
"github.com/kennethreitz/python-guide/blob/master/docs/dev/virtualenvs.rst>`_ "
"docs."
msgstr ""
"Pour commencer à l'utiliser et plus d'informations: documents sur les "
"`environnements virtuels <http://github.com/kennethreitz/python-guide/blob/"
"master/docs/dev/virtualenvs.rst>`_."

#: ../../dev/env.rst:238
msgid "pyenv"
msgstr "pyenv"

#: ../../dev/env.rst:240
msgid ""
"`pyenv <https://github.com/yyuu/pyenv>`_ is a tool to allow multiple "
"versions of the Python interpreter to be installed at the same time.  This "
"solves the problem of having different projects requiring different versions "
"of Python. For example, it becomes very easy to install Python 2.7 for "
"compatibility in one project, whilst still using Python 3.4 as the default "
"interpreter. pyenv isn't just limited to the CPython versions - it will also "
"install PyPy, anaconda, miniconda, stackless, jython, and ironpython "
"interpreters."
msgstr ""
"`pyenv <https://github.com/yyuu/pyenv>`_ est un outil pour autoriser "
"l'installation de plusieurs versions de l'interpréteur Python en même temps. "
"Cela résout le problème d'avoir différents projets nécessitant différentes "
"versions de Python. Par exemple, il devient très facile d'installer Python "
"2.7 pour la compatibilité dans un projet, tout en utilisant Python 3.4 comme "
"l'interpréteur par défaut. pyenv n'est pas limité aux versions CPython - "
"installera également les interpréteurs PyPy, anaconda, miniconda, Stackless, "
"Jython et IronPython."

#: ../../dev/env.rst:248
msgid ""
"pyenv works by filling a ``shims`` directory with fake versions of the "
"Python interpreter (plus other tools like ``pip`` and ``2to3``).  When the "
"system looks for a program named ``python``, it looks inside the ``shims`` "
"directory first, and uses the fake version, which in turn passes the command "
"on to pyenv.  pyenv then works out which version of Python should be run "
"based on environment variables, ``.python-version`` files, and the global "
"default."
msgstr ""
"pyenv fonctionne en remplissant un répertoire ``shims`` avec des fausses "
"versions de l'interpréteur Python (plus d'autres outils comme ``pip`` et "
"``2to3``). Quand le système recherche un programme nommé ``python``, il "
"regarde en premier dans le répertoire ``shims``, et utilise la fausse "
"version, qui à son tour transmet la commande à pyenv.  pyenv ensuite "
"détermine quelle version de Python doit être exécutée en fonction des "
"variables d'environnement, de fichiers ``.python-version`` et de "
"l'environnement global par défaut."

#: ../../dev/env.rst:255
msgid ""
"pyenv isn't a tool for managing virtual environments, but there is the "
"plugin `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv>`_ which "
"automates the creation of different environments, and also makes it possible "
"to use the existing pyenv tools to switch to different environments based on "
"environment variables or ``.python-version`` files."
msgstr ""
"pyenv n'est pas un outil pour la gestion des environnements virtuels, mais "
"il y a le plugin `pyenv-virtualenv <https://github.com/yyuu/pyenv-"
"virtualenv>`_ qui automatise la création de différents environnements, et "
"permet également de utiliser les outils de pyenv existants pour passer à des "
"différents environnements à partir de variables d'environnement ou de "
"fichiers  ``.python-version``."

#: ../../dev/env.rst:262
msgid "Other Tools"
msgstr "Autres outils"

#: ../../dev/env.rst:265
msgid "IDLE"
msgstr "IDLE"

#: ../../dev/env.rst:267
msgid ""
":ref:`IDLE <python:idle>` is an integrated development environment that is "
"part of Python standard library. It is completely written in Python and uses "
"the Tkinter GUI toolkit. Though IDLE is not suited for full-blown "
"development using Python, it is quite helpful to try out small Python "
"snippets and experiment with different features in Python."
msgstr ""
":ref:`IDLE <python:idle>` est un environnement de développement intégré "
"(IDE) qui fait partie de la bibliothèque Python standard. Il est entièrement "
"écrit en Python et utilise la boîte à outils graphique Tkinter. Bien IDLE ne "
"convienne pas pour le développement à part entière en utilisant Python, il "
"est très utile pour essayer de petits bouts de code Python et expérimenter "
"avec les différentes fonctionnalités en Python."

#: ../../dev/env.rst:273
msgid "It provides the following features:"
msgstr "Il fournit les fonctionnalités suivantes:"

#: ../../dev/env.rst:275
msgid "Python Shell Window (interpreter)"
msgstr "Fenêtre du shell Python (interpréteur)"

#: ../../dev/env.rst:276
msgid "Multi window text editor that colorizes Python code"
msgstr "Éditeur de texte multi-fenêtres qui colorie le code Python"

#: ../../dev/env.rst:277
msgid "Minimal debugging facility"
msgstr "Facilité de débugage minimale"

#: ../../dev/env.rst:281
msgid "IPython"
msgstr "IPython"

#: ../../dev/env.rst:283
msgid ""
"`IPython <http://ipython.org/>`_ provides a rich toolkit to help you make "
"the most out of using Python interactively. Its main components are:"
msgstr ""
"`IPython <http://ipython.org/>`_ fournit une boîte à outils riche pour vous "
"aider à tirer le meilleur parti de l'interactivité de Python. Ses "
"principales composants sont:"

#: ../../dev/env.rst:286
msgid "Powerful Python shells (terminal- and Qt-based)."
msgstr "Shells Python puissants (basés sur le terminal et Qt)"

#: ../../dev/env.rst:287
msgid ""
"A web-based notebook with the same core features but support for rich media, "
"text, code, mathematical expressions and inline plots."
msgstr ""
"Un \"notebook\" basé sur le Web avec les mêmes caractéristiques de base, "
"mais le support de médias riches, du texte, du code, des expressions "
"mathématiques et des graphiques intégrés \"inline\"."

#: ../../dev/env.rst:289
msgid "Support for interactive data visualization and use of GUI toolkits."
msgstr ""
"Support pour la visualisation interactive de données et l'utilisation de "
"boîtes à outils avec interface graphique."

#: ../../dev/env.rst:290
msgid "Flexible, embeddable interpreters to load into your own projects."
msgstr ""
"Interpréteurs flexibles, intégrables à charger dans vos propres projets."

#: ../../dev/env.rst:291
msgid "Tools for high level and interactive parallel computing."
msgstr "Outils pour le traitement parallèle interactif et de haut niveau."

#: ../../dev/env.rst:297
msgid ""
"To download and install IPython with all it's optional dependencies for the "
"notebook, qtconsole, tests, and other functionalities"
msgstr ""
"Pour télécharger et installer IPython avec toutes ses dépendances "
"optionnelles pour le notebook, qtconsole, les tests et les autres "
"fonctionnalités"

#: ../../dev/env.rst:304
msgid "BPython"
msgstr "BPython"

#: ../../dev/env.rst:306
msgid ""
"`bpython <http://bpython-interpreter.org/>`_ is an alternative interface to "
"the Python interpreter for Unix-like operating systems. It has the following "
"features:"
msgstr ""
"`bpython <http://bpython-interpreter.org/>`_ est une interface alternative à "
"l'interpréteur Python pour les systèmes d'exploitation de type Unix. Il a "
"les caractéristiques suivantes:"

#: ../../dev/env.rst:310
msgid "In-line syntax highlighting."
msgstr "Coloration syntaxique \"in-line\"."

#: ../../dev/env.rst:311
msgid "Readline-like autocomplete with suggestions displayed as you type."
msgstr ""
"Autocomplétion similaire à readline avec suggestions affichées au fur à "
"mesure que vous tapez."

#: ../../dev/env.rst:312
msgid "Expected parameter list for any Python function."
msgstr "Liste des paramètres attendus pour n'importe quelle fonction Python."

#: ../../dev/env.rst:313
msgid ""
"\"Rewind\" function to pop the last line of code from memory and re-evaluate."
msgstr ""
"Fonction \"Rewind\" pour réafficher la dernière ligne de code depuis la "
"mémoire et la ré-évaluer."

#: ../../dev/env.rst:314
msgid "Send entered code off to a pastebin."
msgstr "Envoyez le code entré vers un pastebin."

#: ../../dev/env.rst:315
msgid "Save entered code to a file."
msgstr "Sauvegarde du texte entré dans un fichier."

#: ../../dev/env.rst:316
msgid "Auto-indentation."
msgstr "Auto-indentation"

#: ../../dev/env.rst:317
msgid "Python 3 support."
msgstr "Support Python 3."

#: ../../dev/env.rst:324
msgid "ptpython"
msgstr "ptpython"

#: ../../dev/env.rst:326
msgid ""
"`ptpython <https://github.com/jonathanslenders/ptpython/>`_ is a REPL build "
"on top of the `prompt_toolkit <http://github.com/jonathanslenders/python-"
"prompt-toolkit>`_ library. It is considered to be an alternative to "
"BPython_. Features include:"
msgstr ""
"`ptpython <https://github.com/jonathanslenders/ptpython/>`_ est une "
"ligne de commande interactive (REPL)  construite par dessus la bibliothèque "
"`prompt_toolkit <http://github.com/jonathanslenders/python-prompt-"
"toolkit>`_. Elle est considérée comme une alternative à BPython_. Les "
"fonctionnalités incluent:"

#: ../../dev/env.rst:330
msgid "Syntax highlighting"
msgstr "Coloration syntaxique"

#: ../../dev/env.rst:331
msgid "Autocompletion"
msgstr "Autocomplétion"

#: ../../dev/env.rst:332
msgid "Multiline editing"
msgstr "Édition multi-lignes"

#: ../../dev/env.rst:333
msgid "Emacs and VIM Mode"
msgstr "Emacs et mode VIM"

#: ../../dev/env.rst:334
msgid "Embedding REPL inside of your code"
msgstr ""
"Encapsulation d'une ligne de commande interactive (REPL) à l'intérieur de "
"votre code"

#: ../../dev/env.rst:335
msgid "Syntax Validation"
msgstr "Validation de syntaxe"

#: ../../dev/env.rst:336
msgid "Tab pages"
msgstr "Pages de tabulation"

#: ../../dev/env.rst:337
msgid ""
"Support for integrating with IPython_'s shell, by installing IPython ``pip "
"install ipython`` and running ``ptipython``."
msgstr ""
"Support pour l'intégration avec le shell IPython_, en installant IPython "
"``pip install ipython`` et en exécutant ``ptipython``."

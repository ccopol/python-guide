# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016. A <a
# href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a>
# Project. <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">CC
# BY-NC-SA 3.0</a>
# This file is distributed under the same license as the pythonguide
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pythonguide 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-03 01:22+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../shipping/freezing.rst:5
msgid "Freezing Your Code"
msgstr ""

#: ../../shipping/freezing.rst:7
msgid ""
"\"Freezing\" your code is creating a single-file executable file to "
"distribute to end-users, that contains all of your application code as "
"well as the Python interpreter."
msgstr ""

#: ../../shipping/freezing.rst:11
msgid ""
"Applications such as 'Dropbox', 'Eve Online',  'Civilisation IV', and "
"BitTorrent clients do this."
msgstr ""

#: ../../shipping/freezing.rst:14
msgid ""
"The advantage of distributing this way is that your application will "
"\"just work\", even if the user doesn't already have the required version"
" of Python (or any) installed. On Windows, and even on many Linux "
"distributions and OS X, the right version of Python will not already be "
"installed."
msgstr ""

#: ../../shipping/freezing.rst:19
msgid ""
"Besides, end-user software should always be in an executable format. "
"Files ending in ``.py`` are for software engineers and system "
"administrators."
msgstr ""

#: ../../shipping/freezing.rst:22
msgid ""
"One disadvantage of freezing is that it will increase the size of your "
"distribution by about 2–12MB. Also, you will be responsible for shipping "
"updated versions of your application when security vulnerabilities to "
"Python are patched."
msgstr ""

#: ../../shipping/freezing.rst:28
msgid "Alternatives to Freezing"
msgstr ""

#: ../../shipping/freezing.rst:30
msgid ""
":ref:`Packaging your code <packaging-your-code-ref>` is for distributing "
"libraries or tools to other developers."
msgstr ""

#: ../../shipping/freezing.rst:33
msgid ""
"On Linux, an alternative to freezing is to :ref:`create a Linux distro "
"package <packaging-for-linux-distributions-ref>` (e.g. .deb files for "
"Debian or Ubuntu, or .rpm files for Red Hat and SuSE.)"
msgstr ""

#: ../../shipping/freezing.rst
msgid "À faire"
msgstr ""

#: ../../shipping/freezing.rst:37
msgid "Fill in \"Freezing Your Code\" stub"
msgstr ""

#: ../../shipping/freezing.rst:41
msgid "Comparison of Freezing Tools"
msgstr ""

#: ../../shipping/freezing.rst:43
msgid "Solutions and platforms/features supported:"
msgstr ""

#: ../../shipping/freezing.rst:46
msgid "Solution"
msgstr ""

#: ../../shipping/freezing.rst:46 ../../shipping/freezing.rst:66
msgid "Windows"
msgstr ""

#: ../../shipping/freezing.rst:46 ../../shipping/freezing.rst:170
msgid "Linux"
msgstr ""

#: ../../shipping/freezing.rst:46 ../../shipping/freezing.rst:115
msgid "OS X"
msgstr ""

#: ../../shipping/freezing.rst:46
msgid "Python 3"
msgstr ""

#: ../../shipping/freezing.rst:46
msgid "License"
msgstr ""

#: ../../shipping/freezing.rst:46
msgid "One-file mode"
msgstr ""

#: ../../shipping/freezing.rst:46
msgid "Zipfile import"
msgstr ""

#: ../../shipping/freezing.rst:46
msgid "Eggs"
msgstr ""

#: ../../shipping/freezing.rst:46
msgid "pkg_resources support"
msgstr ""

#: ../../shipping/freezing.rst:48 ../../shipping/freezing.rst:69
#: ../../shipping/freezing.rst:174
msgid "bbFreeze"
msgstr ""

#: ../../shipping/freezing.rst:48 ../../shipping/freezing.rst:49
#: ../../shipping/freezing.rst:50 ../../shipping/freezing.rst:51
#: ../../shipping/freezing.rst:52
msgid "yes"
msgstr ""

#: ../../shipping/freezing.rst:48 ../../shipping/freezing.rst:49
#: ../../shipping/freezing.rst:50 ../../shipping/freezing.rst:51
#: ../../shipping/freezing.rst:52
msgid "no"
msgstr ""

#: ../../shipping/freezing.rst:48 ../../shipping/freezing.rst:49
#: ../../shipping/freezing.rst:52
msgid "MIT"
msgstr ""

#: ../../shipping/freezing.rst:49 ../../shipping/freezing.rst:76
msgid "py2exe"
msgstr ""

#: ../../shipping/freezing.rst:50
msgid "pyInstaller"
msgstr ""

#: ../../shipping/freezing.rst:50
msgid "GPL"
msgstr ""

#: ../../shipping/freezing.rst:51
msgid "cx_Freeze"
msgstr ""

#: ../../shipping/freezing.rst:51
msgid "PSF"
msgstr ""

#: ../../shipping/freezing.rst:52 ../../shipping/freezing.rst:119
msgid "py2app"
msgstr ""

#: ../../shipping/freezing.rst:56
msgid ""
"Freezing Python code on Linux into a Windows executable was only once "
"supported in PyInstaller `and later dropped. "
"<http://stackoverflow.com/questions/2950971/cross-compiling-a-python-"
"script-on-linux-into-a-windows-executable#comment11890276_2951046>`_."
msgstr ""

#: ../../shipping/freezing.rst:61
msgid ""
"All solutions need MS Visual C++ dll to be installed on target machine, "
"except py2app. Only Pyinstaller makes self-executable exe that bundles "
"the dll when passing :option:`--onefile` to :file:`Configure.py`."
msgstr ""

#: ../../shipping/freezing.rst:71
msgid ""
"Prerequisite is to install :ref:`Python, Setuptools and pywin32 "
"dependency on Windows <install-windows>`."
msgstr ""

#: ../../shipping/freezing.rst:73
msgid "Write steps for most basic .exe"
msgstr ""

#: ../../shipping/freezing.rst:78
msgid "Prerequisite is to install :ref:`Python on Windows <install-windows>`."
msgstr ""

#: ../../shipping/freezing.rst:80
msgid "Download and install http://sourceforge.net/projects/py2exe/files/py2exe/"
msgstr ""

#: ../../shipping/freezing.rst:82
msgid ""
"Write :file:`setup.py` (`List of configuration options "
"<http://www.py2exe.org/index.cgi/ListOfOptions>`_):"
msgstr ""

#: ../../shipping/freezing.rst:93
msgid "(Optionally) `include icon <http://www.py2exe.org/index.cgi/CustomIcons>`_"
msgstr ""

#: ../../shipping/freezing.rst:95
msgid ""
"(Optionally) `one-file mode <http://stackoverflow.com/questions/112698"
"/py2exe-generate-single-executable-file#113014>`_"
msgstr ""

#: ../../shipping/freezing.rst:97
msgid "Generate :file:`.exe` into :file:`dist` directory:"
msgstr ""

#: ../../shipping/freezing.rst:103
msgid ""
"Provide the Microsoft Visual C runtime DLL. Two options: `globally "
"install dll on target machine <https://www.microsoft.com/en-"
"us/download/details.aspx?id=29>`_ or `distribute dll alongside with .exe "
"<http://www.py2exe.org/index.cgi/Tutorial#Step52>`_."
msgstr ""

#: ../../shipping/freezing.rst:106 ../../shipping/freezing.rst:122
#: ../../shipping/freezing.rst:177
msgid "PyInstaller"
msgstr ""

#: ../../shipping/freezing.rst:108
msgid ""
"Prerequisite is to have installed :ref:`Python, Setuptools and pywin32 "
"dependency on Windows <install-windows>`."
msgstr ""

#: ../../shipping/freezing.rst:110
msgid ""
"`Most basic tutorial <http://bojan-komazec.blogspot.com/2011/08/how-to-"
"create-windows-executable-from.html>`_"
msgstr ""

#: ../../shipping/freezing.rst:111
msgid ""
"`Manual "
"<http://www.pyinstaller.org/export/d3398dd79b68901ae1edd761f3fe0f4ff19cfb1a/project/doc/Manual.html?format=raw>`_"
msgstr ""

#: ../../shipping/freezing.rst:124
msgid ""
"PyInstaller can be used to build Unix executables and windowed apps on "
"Mac OS X 10.6 (Snow Leopard) or newer."
msgstr ""

#: ../../shipping/freezing.rst:126
msgid "To install PyInstaller, use pip:"
msgstr ""

#: ../../shipping/freezing.rst:132
msgid "To create a standard Unix executable, from say :code:`script.py`, use:"
msgstr ""

#: ../../shipping/freezing.rst:138
msgid "This creates,"
msgstr ""

#: ../../shipping/freezing.rst:140
msgid "a :code:`script.spec` file, analogous to a :code:`make` file"
msgstr ""

#: ../../shipping/freezing.rst:141
msgid "a :code:`build` folder, that holds some log files"
msgstr ""

#: ../../shipping/freezing.rst:142
msgid ""
"a :code:`dist` folder, that holds the main executable :code:`script`, and"
" some dependent Python libraries,"
msgstr ""

#: ../../shipping/freezing.rst:144
msgid ""
"all in the same folder as :code:`script.py`. PyInstaller puts all the "
"Python libraries used in :code:`script.py` into the :code:`dist` folder, "
"so when distributing the executable, distribute the whole :code:`dist` "
"folder."
msgstr ""

#: ../../shipping/freezing.rst:146
msgid ""
"The :code:`script.spec` file can be edited to `customise the build "
"<http://pythonhosted.org/PyInstaller/#spec-file-operation>`_, with "
"options such as"
msgstr ""

#: ../../shipping/freezing.rst:148
msgid "bundling data files with the executable"
msgstr ""

#: ../../shipping/freezing.rst:149
msgid ""
"including run-time libraries (:code:`.dll` or :code:`.so` files) that "
"PyInstaller can't infer automatically"
msgstr ""

#: ../../shipping/freezing.rst:150
msgid "adding Python run-time options to the executable,"
msgstr ""

#: ../../shipping/freezing.rst:152
msgid ""
"Now :code:`script.spec` can be run with :code:`pyinstaller` (instead of "
"using :code:`script.py` again):"
msgstr ""

#: ../../shipping/freezing.rst:158
msgid ""
"To create a standalone windowed OS X application, use the "
":code:`--windowed` option"
msgstr ""

#: ../../shipping/freezing.rst:164
msgid ""
"This creates a :code:`script.app` in the :code:`dist` folder. Make sure "
"to use GUI packages in your Python code, like `PyQt "
"<https://riverbankcomputing.com/software/pyqt/intro>`_ or `PySide "
"<http://wiki.qt.io/About-PySide>`_, to control the graphical parts of the"
" app."
msgstr ""

#: ../../shipping/freezing.rst:166
msgid ""
"There are several options in :code:`script.spec` related to Mac OS X app "
"bundles `here <http://pythonhosted.org/PyInstaller/#spec-file-options-"
"for-a-mac-os-x-bundle>`_. For example, to specify an icon for the app, "
"use the :code:`icon=\\path\\to\\icon.icns` option."
msgstr ""

